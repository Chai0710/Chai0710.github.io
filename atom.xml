<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chai&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chaichai.site/"/>
  <updated>2019-11-20T08:28:52.361Z</updated>
  <id>https://chaichai.site/</id>
  
  <author>
    <name>Chai Wei-Li</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JS30 Day05 Flex Panels Image Gallery</title>
    <link href="https://chaichai.site/2019/11/19/js30-05/"/>
    <id>https://chaichai.site/2019/11/19/js30-05/</id>
    <published>2019-11-18T16:00:00.000Z</published>
    <updated>2019-11-20T08:28:52.361Z</updated>
    
    <content type="html"><![CDATA[<p>JS30 Day05<br>flex 不愧為排版聖品，簡單易學效果佳。</p><a id="more"></a><hr><h1 id="Flex-Panels-Image-Gallery"><a href="#Flex-Panels-Image-Gallery" class="headerlink" title="Flex Panels Image Gallery"></a>Flex Panels Image Gallery</h1><h2 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h2><ul><li>功能<ul><li>點擊指定的區塊，產生動畫</li><li>再點擊一次，恢復原狀</li></ul></li><li>畫面<ul><li>標籤 p 中間的字變大</li><li>變大之後上下的字要進來</li></ul></li></ul><br><hr><br><h3 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index-START.html"></a>index-START.html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Flex Panels 💪<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">"https://fonts.googleapis.com/css?family=Amatic+SC"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">"stylesheet"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">type</span>=<span class="string">"text/css"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">      html &#123;</span><br><span class="line">        box-sizing: border-box;</span><br><span class="line">        background: #ffc600;</span><br><span class="line">        font-family: "helvetica neue";</span><br><span class="line">        font-size: 20px;</span><br><span class="line">        font-weight: 200;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      body &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      *,</span><br><span class="line">      *:before,</span><br><span class="line">      *:after &#123;</span><br><span class="line">        box-sizing: inherit;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .panels &#123;</span><br><span class="line">        min-height: 100vh;</span><br><span class="line">        overflow: hidden;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .panel &#123;</span><br><span class="line">        background: #6b0f9c;</span><br><span class="line">        box-shadow: inset 0 0 0 5px rgba(255, 255, 255, 0.1);</span><br><span class="line">        color: white;</span><br><span class="line">        text-align: center;</span><br><span class="line">        align-items: center;</span><br><span class="line">        /* Safari transitionend event.propertyName === flex */</span><br><span class="line">        /* Chrome + FF transitionend event.propertyName === flex-grow */</span><br><span class="line">        transition: font-size 0.7s cubic-bezier(0.61, -0.19, 0.7, -0.11), flex</span><br><span class="line">            0.7s cubic-bezier(0.61, -0.19, 0.7, -0.11), background 0.2s;</span><br><span class="line">        font-size: 20px;</span><br><span class="line">        background-size: cover;</span><br><span class="line">        background-position: center;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .panel1 &#123;</span><br><span class="line">        background-image: url(https://source.unsplash.com/gYl-UtwNg_I/1500x1500);</span><br><span class="line">      &#125;</span><br><span class="line">      .panel2 &#123;</span><br><span class="line">        background-image: url(https://source.unsplash.com/rFKUFzjPYiQ/1500x1500);</span><br><span class="line">      &#125;</span><br><span class="line">      .panel3 &#123;</span><br><span class="line">        background-image: url(https://images.unsplash.com/photo-1465188162913-8fb5709d6d57?ixlib=rb-0.3.5&amp;q=80&amp;fm=jpg&amp;crop=faces&amp;cs=tinysrgb&amp;w=1500&amp;h=1500&amp;fit=crop&amp;s=967e8a713a4e395260793fc8c802901d);</span><br><span class="line">      &#125;</span><br><span class="line">      .panel4 &#123;</span><br><span class="line">        background-image: url(https://source.unsplash.com/ITjiVXcwVng/1500x1500);</span><br><span class="line">      &#125;</span><br><span class="line">      .panel5 &#123;</span><br><span class="line">        background-image: url(https://source.unsplash.com/3MNzGlQM7qs/1500x1500);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      /* Flex Children */</span><br><span class="line">      .panel &gt; * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        width: 100%;</span><br><span class="line">        transition: transform 0.5s;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .panel p &#123;</span><br><span class="line">        text-transform: uppercase;</span><br><span class="line">        font-family: "Amatic SC", cursive;</span><br><span class="line">        text-shadow: 0 0 4px rgba(0, 0, 0, 0.72), 0 0 14px rgba(0, 0, 0, 0.45);</span><br><span class="line">        font-size: 2em;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .panel p:nth-child(2) &#123;</span><br><span class="line">        font-size: 4em;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .panel.open &#123;</span><br><span class="line">        font-size: 40px;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panels"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hey<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Let's<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Dance<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Give<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Take<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Receive<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel3"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Experience<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>It<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Today<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel4"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Give<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>All<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>You can<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel5"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Life<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>In<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Motion<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h3 id="index-FINISHED-html"><a href="#index-FINISHED-html" class="headerlink" title="index-FINISHED.html"></a>index-FINISHED.html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Flex Panels 💪<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">"https://fonts.googleapis.com/css?family=Amatic+SC"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">"stylesheet"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">type</span>=<span class="string">"text/css"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">      html &#123;</span><br><span class="line">        box-sizing: border-box;</span><br><span class="line">        background: #ffc600;</span><br><span class="line">        font-family: "helvetica neue";</span><br><span class="line">        font-size: 20px;</span><br><span class="line">        font-weight: 200;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      body &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      *,</span><br><span class="line">      *:before,</span><br><span class="line">      *:after &#123;</span><br><span class="line">        box-sizing: inherit;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .panels &#123;</span><br><span class="line">        min-height: 100vh;</span><br><span class="line">        overflow: hidden;</span><br><span class="line">        display: flex;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .panel &#123;</span><br><span class="line">        background: #6b0f9c;</span><br><span class="line">        box-shadow: inset 0 0 0 5px rgba(255, 255, 255, 0.1);</span><br><span class="line">        color: white;</span><br><span class="line">        text-align: center;</span><br><span class="line">        align-items: center;</span><br><span class="line">        /* Safari transitionend event.propertyName === flex */</span><br><span class="line">        /* Chrome + FF transitionend event.propertyName === flex-grow */</span><br><span class="line">        transition: font-size 0.7s cubic-bezier(0.61, -0.19, 0.7, -0.11), flex</span><br><span class="line">            0.7s cubic-bezier(0.61, -0.19, 0.7, -0.11), background 0.2s;</span><br><span class="line">        font-size: 20px;</span><br><span class="line">        background-size: cover;</span><br><span class="line">        background-position: center;</span><br><span class="line">        flex: 1;</span><br><span class="line">        justify-content: center;</span><br><span class="line">        display: flex;</span><br><span class="line">        flex-direction: column;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .panel1 &#123;</span><br><span class="line">        background-image: url(https://source.unsplash.com/gYl-UtwNg_I/1500x1500);</span><br><span class="line">      &#125;</span><br><span class="line">      .panel2 &#123;</span><br><span class="line">        background-image: url(https://source.unsplash.com/rFKUFzjPYiQ/1500x1500);</span><br><span class="line">      &#125;</span><br><span class="line">      .panel3 &#123;</span><br><span class="line">        background-image: url(https://images.unsplash.com/photo-1465188162913-8fb5709d6d57?ixlib=rb-0.3.5&amp;q=80&amp;fm=jpg&amp;crop=faces&amp;cs=tinysrgb&amp;w=1500&amp;h=1500&amp;fit=crop&amp;s=967e8a713a4e395260793fc8c802901d);</span><br><span class="line">      &#125;</span><br><span class="line">      .panel4 &#123;</span><br><span class="line">        background-image: url(https://source.unsplash.com/ITjiVXcwVng/1500x1500);</span><br><span class="line">      &#125;</span><br><span class="line">      .panel5 &#123;</span><br><span class="line">        background-image: url(https://source.unsplash.com/3MNzGlQM7qs/1500x1500);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      /* Flex Items */</span><br><span class="line">      .panel &gt; * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        width: 100%;</span><br><span class="line">        transition: transform 0.5s;</span><br><span class="line">        flex: 1 0 auto;</span><br><span class="line">        display: flex;</span><br><span class="line">        justify-content: center;</span><br><span class="line">        align-items: center;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .panel &gt; *:first-child &#123;</span><br><span class="line">        transform: translateY(-100%);</span><br><span class="line">      &#125;</span><br><span class="line">      .panel.open-active &gt; *:first-child &#123;</span><br><span class="line">        transform: translateY(0);</span><br><span class="line">      &#125;</span><br><span class="line">      .panel &gt; *:last-child &#123;</span><br><span class="line">        transform: translateY(100%);</span><br><span class="line">      &#125;</span><br><span class="line">      .panel.open-active &gt; *:last-child &#123;</span><br><span class="line">        transform: translateY(0);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .panel p &#123;</span><br><span class="line">        text-transform: uppercase;</span><br><span class="line">        font-family: "Amatic SC", cursive;</span><br><span class="line">        text-shadow: 0 0 4px rgba(0, 0, 0, 0.72), 0 0 14px rgba(0, 0, 0, 0.45);</span><br><span class="line">        font-size: 2em;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .panel p:nth-child(2) &#123;</span><br><span class="line">        font-size: 4em;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .panel.open &#123;</span><br><span class="line">        flex: 5;</span><br><span class="line">        font-size: 40px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      @media only screen and (max-width: 600px) &#123;</span><br><span class="line">        .panel p &#123;</span><br><span class="line">          font-size: 1em;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panels"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hey<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Let's<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Dance<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Give<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Take<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Receive<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel3"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Experience<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>It<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Today<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel4"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Give<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>All<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>You can<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel5"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Life<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>In<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Motion<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">      const panels = document.querySelectorAll(".panel");</span><br><span class="line"></span><br><span class="line">      function toggleOpen() &#123;</span><br><span class="line">        console.log("Hello");</span><br><span class="line">        this.classList.toggle("open");</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      function toggleActive(e) &#123;</span><br><span class="line">        console.log(e.propertyName);</span><br><span class="line">        if (e.propertyName.includes("flex")) &#123;</span><br><span class="line">          this.classList.toggle("open-active");</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      panels.forEach(panel =&gt; panel.addEventListener("click", toggleOpen));</span><br><span class="line">      panels.forEach(panel =&gt;</span><br><span class="line">        panel.addEventListener("transitionend", toggleActive)</span><br><span class="line">      );</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><hr><br><h2 id="學習筆記"><a href="#學習筆記" class="headerlink" title="學習筆記"></a>學習筆記</h2><br><h4 id="★-Flexbox"><a href="#★-Flexbox" class="headerlink" title="★ Flexbox"></a>★ Flexbox</h4><p>CSS3 flexbox 是為了適應不同螢幕尺寸和顯示設備而生的排版模式。利用 flexbox 可以更輕鬆地設計靈活的響應式排版，取代 float 或 position 屬性。</p><p>flex 排版的大致定義，是能更改該項目的長與（或）高，以便貼合任何顯示設備的空間。flex container 能針對該元件擴張以便填補可用的空間、或收縮以便阻止空間溢出。block layout 以垂直方向為準、inline layout 以水平方向為準、而 flexbox layout 則同時允許這兩種。<br><br></p><ul><li><strong>Flexbox element</strong></li></ul><p>要開始使用 flexbox ，首先需要定義 flex container 以及 flex items</p><ul><li><p>flex container：</p><p>包住 flex item 的父元素。屬性為 <code>display: flex</code> 或 <code>display: inline-flex</code> 的，就是 flex container。</p></li><li><p>flex items：</p><p>所有 flex container 的子元素都會變成 flex items。直接包含在 flex container 內的文字，會被包裝成匿名的 flex items。</p></li></ul><p>範例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">      .flex-container &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        background-color: Blue;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .flex-container &gt; div &#123;</span><br><span class="line">        background-color: #fff;</span><br><span class="line">        margin: 10px;</span><br><span class="line">        padding: 20px;</span><br><span class="line">        font-size: 30px;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"flex-container"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><ul><li><strong>Axes</strong></li></ul><p>所有 flexbox 的布局都有兩個軸，main axis 是跟隨著 flex items 順序的軸、而 cross axis 是垂直於主軸的軸。</p><ul><li><code>flex-direction</code> 屬性啟用主軸。</li><li><code>justify-content</code> 屬性定義目前 flex items 的主軸如何擺放。</li><li><code>align-items</code> 屬性定義目前 flex items 的 cross axis 如何擺放。</li><li><code>align-self</code> 屬性定義目前單一 flex items 如何對齊。這個設定會覆蓋 <code>align-items</code> 的預設值。</li></ul><br><ul><li><p><strong>Directions</strong></p><p>flexbox 的 main start/main end 與 cross start/cross end sides 描述了 flex items flow 的起點與終點。它們跟隨著由 <code>writing-mode</code> 所建立的向量中，flex container 的 main axis 與 cross axis 排列（左至右或右至左等等）。</p><ul><li><code>order</code> 將元素按順序排列，並決定哪些元素首先出現。</li><li><code>flex-flow</code> 屬性是 <code>flex-direction</code> 與 <code>flex-wrap</code> 屬性的簡寫，描述了 flex items 的整體布局。</li></ul></li></ul><br><ul><li><p><strong>Lines</strong></p><p>根據 <code>flex-wrap</code> 屬性，可以將 flex items 排列在一行或多行上，該屬性控制橫軸的方向和多行的堆疊方向。</p></li></ul><br><ul><li><p><strong>Dimensions</strong></p><p>flex items 的高度和寬度分別依據 flex container 的 main axis 和 cross axis。</p><ul><li>min-height 和 min-width 屬性的初始值為 0。</li><li>flex 屬性是 <code>flex-grow</code>、<code>flex-shrink</code>、<code>flex-basis</code> 屬性的簡寫，可以建立 flex items 的靈活性。</li></ul></li></ul><br><h4 id="★-querySelectorAll"><a href="#★-querySelectorAll" class="headerlink" title="★ querySelectorAll()"></a>★ querySelectorAll()</h4><p><code>querySelectorAll()</code> 返回指定的 CSS 選擇器的所有元素（NodeList 物件）。</p><ul><li><code>querySelectorAll()</code> 與 <code>querySelector()</code> 的差異：<ul><li>querySelector 只返回匹配的第一個元素，如果沒有匹配項目，返回 null。</li><li>querySelectorAll 返回匹配的元素集合，如果沒有匹配項，返回空的 NodeList。</li><li>這兩個方法都可以接受三種型別的引數：id(#)、class(.)、tag，很像 jQuery 的選擇器。</li></ul></li></ul><p>範例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"test"</span>&gt;</span>class="test" 的標題<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"test"</span>&gt;</span>class="test" 的段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"myFunction()"</span>&gt;</span>點擊<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">      // 點擊後，class="test"的第一個元素改變顏色。</span><br><span class="line">      function myFunction() &#123;</span><br><span class="line">        let x = document.querySelectorAll(".test");</span><br><span class="line">        x[0].style.backgroundColor = "yellow";</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h4 id="★-forEach"><a href="#★-forEach" class="headerlink" title="★ forEach()"></a>★ forEach()</h4><p><code>forEach()</code> 方法會將陣列內的每個元素，皆傳入並執行給定的函式一次。</p><p>範例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> array1 = [<span class="string">"Chai"</span>, <span class="string">"Jay"</span>, <span class="string">"Kawa"</span>, <span class="string">"Annie"</span>];</span><br><span class="line"></span><br><span class="line">array1.forEach(<span class="function"><span class="params">x</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">`super cute <span class="subst">$&#123;x&#125;</span>`</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// "super cute Chai" "super cute Jay" "super cute Kawa" "super cute Annie"</span></span><br></pre></td></tr></table></figure><p>輸出結果看起來似乎有點眼熟，跟 Day04 <code>Array.map()</code> 幾乎一模一樣。</p><ul><li><p>那 <code>forEach()</code> 跟 <code>map()</code> 方法有什麼不一樣呢？</p><ul><li><p><code>map()</code> 會分配內存空間儲存新 Array，並返回。</p><p><code>map()</code> 適用於需要改變數值時。效能較 <code>forEach()</code> 高，且能夠使用複合技：<code>map()</code>、<code>filter()</code>、<code>reduce()</code> 等組合。</p></li><li><p><code>forEach()</code> 允許 <code>callback</code> 更改原始 Array 的元素，不會返回新的 Array。</p><p><code>forEach()</code> 適用於不打算改變數據的時候，只是想用數據做一些事情，比如存入數據庫或印出來。</p></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JS30 Day05&lt;br&gt;flex 不愧為排版聖品，簡單易學效果佳。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JS30" scheme="https://chaichai.site/categories/JS30/"/>
    
    
      <category term="程式筆記" scheme="https://chaichai.site/tags/%E7%A8%8B%E5%BC%8F%E7%AD%86%E8%A8%98/"/>
    
      <category term="Javascript" scheme="https://chaichai.site/tags/Javascript/"/>
    
      <category term="JS30" scheme="https://chaichai.site/tags/JS30/"/>
    
  </entry>
  
  <entry>
    <title>JS30 Day04 Array Cardio Day 1</title>
    <link href="https://chaichai.site/2019/11/17/js30-04/"/>
    <id>https://chaichai.site/2019/11/17/js30-04/</id>
    <published>2019-11-16T16:00:00.000Z</published>
    <updated>2019-11-17T15:23:50.686Z</updated>
    
    <content type="html"><![CDATA[<p>JS30 Day04<br>對 JS 新手來說，這堂課非常重要。學會 Array 的各種方法，就可以解決大部分的問題！</p><a id="more"></a><hr><h1 id="Array-Cardio-Day-1"><a href="#Array-Cardio-Day-1" class="headerlink" title="Array Cardio Day 1"></a>Array Cardio Day 1</h1><h2 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h2><p>今日的主題與呈現漂亮的畫面無關，而是學習 JavaScript 中常見的 Array 方法。</p><br><hr><br><h3 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index-START.html"></a>index-START.html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Array Cardio 💪<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span>Psst: have a look at the JavaScript Console<span class="tag">&lt;/<span class="name">em</span>&gt;</span> 💁<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">      // Get your shorts on - this is an array workout!</span><br><span class="line">      // ## Array Cardio Day 1</span><br><span class="line"></span><br><span class="line">      // Some data we can work with</span><br><span class="line"></span><br><span class="line">      const inventors = [</span><br><span class="line">        &#123; first: "Albert", last: "Einstein", year: 1879, passed: 1955 &#125;,</span><br><span class="line">        &#123; first: "Isaac", last: "Newton", year: 1643, passed: 1727 &#125;,</span><br><span class="line">        &#123; first: "Galileo", last: "Galilei", year: 1564, passed: 1642 &#125;,</span><br><span class="line">        &#123; first: "Marie", last: "Curie", year: 1867, passed: 1934 &#125;,</span><br><span class="line">        &#123; first: "Johannes", last: "Kepler", year: 1571, passed: 1630 &#125;,</span><br><span class="line">        &#123; first: "Nicolaus", last: "Copernicus", year: 1473, passed: 1543 &#125;,</span><br><span class="line">        &#123; first: "Max", last: "Planck", year: 1858, passed: 1947 &#125;,</span><br><span class="line">        &#123; first: "Katherine", last: "Blodgett", year: 1898, passed: 1979 &#125;,</span><br><span class="line">        &#123; first: "Ada", last: "Lovelace", year: 1815, passed: 1852 &#125;,</span><br><span class="line">        &#123; first: "Sarah E.", last: "Goode", year: 1855, passed: 1905 &#125;,</span><br><span class="line">        &#123; first: "Lise", last: "Meitner", year: 1878, passed: 1968 &#125;,</span><br><span class="line">        &#123; first: "Hanna", last: "Hammarström", year: 1829, passed: 1909 &#125;</span><br><span class="line">      ];</span><br><span class="line"></span><br><span class="line">      const people = [</span><br><span class="line">        "Beck, Glenn",</span><br><span class="line">        "Becker, Carl",</span><br><span class="line">        "Beckett, Samuel",</span><br><span class="line">        "Beddoes, Mick",</span><br><span class="line">        "Beecher, Henry",</span><br><span class="line">        "Beethoven, Ludwig",</span><br><span class="line">        "Begin, Menachem",</span><br><span class="line">        "Belloc, Hilaire",</span><br><span class="line">        "Bellow, Saul",</span><br><span class="line">        "Benchley, Robert",</span><br><span class="line">        "Benenson, Peter",</span><br><span class="line">        "Ben-Gurion, David",</span><br><span class="line">        "Benjamin, Walter",</span><br><span class="line">        "Benn, Tony",</span><br><span class="line">        "Bennington, Chester",</span><br><span class="line">        "Benson, Leana",</span><br><span class="line">        "Bent, Silas",</span><br><span class="line">        "Bentsen, Lloyd",</span><br><span class="line">        "Berger, Ric",</span><br><span class="line">        "Bergman, Ingmar",</span><br><span class="line">        "Berio, Luciano",</span><br><span class="line">        "Berle, Milton",</span><br><span class="line">        "Berlin, Irving",</span><br><span class="line">        "Berne, Eric",</span><br><span class="line">        "Bernhard, Sandra",</span><br><span class="line">        "Berra, Yogi",</span><br><span class="line">        "Berry, Halle",</span><br><span class="line">        "Berry, Wendell",</span><br><span class="line">        "Bethea, Erin",</span><br><span class="line">        "Bevan, Aneurin",</span><br><span class="line">        "Bevel, Ken",</span><br><span class="line">        "Biden, Joseph",</span><br><span class="line">        "Bierce, Ambrose",</span><br><span class="line">        "Biko, Steve",</span><br><span class="line">        "Billings, Josh",</span><br><span class="line">        "Biondo, Frank",</span><br><span class="line">        "Birrell, Augustine",</span><br><span class="line">        "Black, Elk",</span><br><span class="line">        "Blair, Robert",</span><br><span class="line">        "Blair, Tony",</span><br><span class="line">        "Blake, William"</span><br><span class="line">      ];</span><br><span class="line"></span><br><span class="line">      // Array.prototype.filter()</span><br><span class="line">      // 1. Filter the list of inventors for those who were born in the 1500's</span><br><span class="line"></span><br><span class="line">      // Array.prototype.map()</span><br><span class="line">      // 2. Give us an array of the inventors' first and last names</span><br><span class="line"></span><br><span class="line">      // Array.prototype.sort()</span><br><span class="line">      // 3. Sort the inventors by birthdate, oldest to youngest</span><br><span class="line"></span><br><span class="line">      // Array.prototype.reduce()</span><br><span class="line">      // 4. How many years did all the inventors live?</span><br><span class="line"></span><br><span class="line">      // 5. Sort the inventors by years lived</span><br><span class="line"></span><br><span class="line">      // 6. create a list of Boulevards in Paris that contain 'de' anywhere in the name</span><br><span class="line">      // https://en.wikipedia.org/wiki/Category:Boulevards_in_Paris</span><br><span class="line"></span><br><span class="line">      // 7. sort Exercise</span><br><span class="line">      // Sort the people alphabetically by last name</span><br><span class="line"></span><br><span class="line">      // 8. Reduce Exercise</span><br><span class="line">      // Sum up the instances of each of these</span><br><span class="line">      const data = [</span><br><span class="line">        "car",</span><br><span class="line">        "car",</span><br><span class="line">        "truck",</span><br><span class="line">        "truck",</span><br><span class="line">        "bike",</span><br><span class="line">        "walk",</span><br><span class="line">        "car",</span><br><span class="line">        "van",</span><br><span class="line">        "bike",</span><br><span class="line">        "walk",</span><br><span class="line">        "car",</span><br><span class="line">        "van",</span><br><span class="line">        "car",</span><br><span class="line">        "truck"</span><br><span class="line">      ];</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h3 id="index-FINISHED-html"><a href="#index-FINISHED-html" class="headerlink" title="index-FINISHED.html"></a>index-FINISHED.html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Array Cardio 💪<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span>Psst: have a look at the JavaScript Console<span class="tag">&lt;/<span class="name">em</span>&gt;</span> 💁<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">      // Get your shorts on - this is an array workout!</span><br><span class="line">      // ## Array Cardio Day 1</span><br><span class="line"></span><br><span class="line">      // Some data we can work with</span><br><span class="line"></span><br><span class="line">      const inventors = [</span><br><span class="line">        &#123; first: "Albert", last: "Einstein", year: 1879, passed: 1955 &#125;,</span><br><span class="line">        &#123; first: "Isaac", last: "Newton", year: 1643, passed: 1727 &#125;,</span><br><span class="line">        &#123; first: "Galileo", last: "Galilei", year: 1564, passed: 1642 &#125;,</span><br><span class="line">        &#123; first: "Marie", last: "Curie", year: 1867, passed: 1934 &#125;,</span><br><span class="line">        &#123; first: "Johannes", last: "Kepler", year: 1571, passed: 1630 &#125;,</span><br><span class="line">        &#123; first: "Nicolaus", last: "Copernicus", year: 1473, passed: 1543 &#125;,</span><br><span class="line">        &#123; first: "Max", last: "Planck", year: 1858, passed: 1947 &#125;,</span><br><span class="line">        &#123; first: "Katherine", last: "Blodgett", year: 1898, passed: 1979 &#125;,</span><br><span class="line">        &#123; first: "Ada", last: "Lovelace", year: 1815, passed: 1852 &#125;,</span><br><span class="line">        &#123; first: "Sarah E.", last: "Goode", year: 1855, passed: 1905 &#125;,</span><br><span class="line">        &#123; first: "Lise", last: "Meitner", year: 1878, passed: 1968 &#125;,</span><br><span class="line">        &#123; first: "Hanna", last: "Hammarström", year: 1829, passed: 1909 &#125;</span><br><span class="line">      ];</span><br><span class="line"></span><br><span class="line">      const people = [</span><br><span class="line">        "Beck, Glenn",</span><br><span class="line">        "Becker, Carl",</span><br><span class="line">        "Beckett, Samuel",</span><br><span class="line">        "Beddoes, Mick",</span><br><span class="line">        "Beecher, Henry",</span><br><span class="line">        "Beethoven, Ludwig",</span><br><span class="line">        "Begin, Menachem",</span><br><span class="line">        "Belloc, Hilaire",</span><br><span class="line">        "Bellow, Saul",</span><br><span class="line">        "Benchley, Robert",</span><br><span class="line">        "Benenson, Peter",</span><br><span class="line">        "Ben-Gurion, David",</span><br><span class="line">        "Benjamin, Walter",</span><br><span class="line">        "Benn, Tony",</span><br><span class="line">        "Bennington, Chester",</span><br><span class="line">        "Benson, Leana",</span><br><span class="line">        "Bent, Silas",</span><br><span class="line">        "Bentsen, Lloyd",</span><br><span class="line">        "Berger, Ric",</span><br><span class="line">        "Bergman, Ingmar",</span><br><span class="line">        "Berio, Luciano",</span><br><span class="line">        "Berle, Milton",</span><br><span class="line">        "Berlin, Irving",</span><br><span class="line">        "Berne, Eric",</span><br><span class="line">        "Bernhard, Sandra",</span><br><span class="line">        "Berra, Yogi",</span><br><span class="line">        "Berry, Halle",</span><br><span class="line">        "Berry, Wendell",</span><br><span class="line">        "Bethea, Erin",</span><br><span class="line">        "Bevan, Aneurin",</span><br><span class="line">        "Bevel, Ken",</span><br><span class="line">        "Biden, Joseph",</span><br><span class="line">        "Bierce, Ambrose",</span><br><span class="line">        "Biko, Steve",</span><br><span class="line">        "Billings, Josh",</span><br><span class="line">        "Biondo, Frank",</span><br><span class="line">        "Birrell, Augustine",</span><br><span class="line">        "Black Elk",</span><br><span class="line">        "Blair, Robert",</span><br><span class="line">        "Blair, Tony",</span><br><span class="line">        "Blake, William"</span><br><span class="line">      ];</span><br><span class="line"></span><br><span class="line">      // Array.prototype.filter()</span><br><span class="line">      // 1. Filter the list of inventors for those who were born in the 1500's</span><br><span class="line">      const fifteen = inventors.filter(</span><br><span class="line">        inventor =&gt; inventor.year &gt;= 1500 &amp;&amp; inventor.year &lt; 1600</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      console.table(fifteen);</span><br><span class="line"></span><br><span class="line">      // Array.prototype.map()</span><br><span class="line">      // 2. Give us an array of the inventor first and last names</span><br><span class="line">      const fullNames = inventors.map(</span><br><span class="line">        inventor =&gt; `$&#123;inventor.first&#125; $&#123;inventor.last&#125;`</span><br><span class="line">      );</span><br><span class="line">      console.log(fullNames);</span><br><span class="line"></span><br><span class="line">      // Array.prototype.sort()</span><br><span class="line">      // 3. Sort the inventors by birthdate, oldest to youngest</span><br><span class="line">      // const ordered = inventors.sort(function(a, b) &#123;</span><br><span class="line">      //   if(a.year &gt; b.year) &#123;</span><br><span class="line">      //     return 1;</span><br><span class="line">      //   &#125; else &#123;</span><br><span class="line">      //     return -1;</span><br><span class="line">      //   &#125;</span><br><span class="line">      // &#125;);</span><br><span class="line"></span><br><span class="line">      const ordered = inventors.sort((a, b) =&gt; (a.year &gt; b.year ? 1 : -1));</span><br><span class="line">      console.table(ordered);</span><br><span class="line"></span><br><span class="line">      // Array.prototype.reduce()</span><br><span class="line">      // 4. How many years did all the inventors live?</span><br><span class="line">      const totalYears = inventors.reduce((total, inventor) =&gt; &#123;</span><br><span class="line">        return total + (inventor.passed - inventor.year);</span><br><span class="line">      &#125;, 0);</span><br><span class="line"></span><br><span class="line">      console.log(totalYears);</span><br><span class="line"></span><br><span class="line">      // 5. Sort the inventors by years lived</span><br><span class="line">      const oldest = inventors.sort(function(a, b) &#123;</span><br><span class="line">        const lastInventor = a.passed - a.year;</span><br><span class="line">        const nextInventor = b.passed - b.year;</span><br><span class="line">        return lastInventor &gt; nextInventor ? -1 : 1;</span><br><span class="line">      &#125;);</span><br><span class="line">      console.table(oldest);</span><br><span class="line"></span><br><span class="line">      // 6. create a list of Boulevards in Paris that contain 'de' anywhere in the name</span><br><span class="line">      // https://en.wikipedia.org/wiki/Category:Boulevards_in_Paris</span><br><span class="line"></span><br><span class="line">      // const category = document.querySelector('.mw-category');</span><br><span class="line">      // const links = Array.from(category.querySelectorAll('a'));</span><br><span class="line">      // const de = links</span><br><span class="line">      //             .map(link =&gt; link.textContent)</span><br><span class="line">      //             .filter(streetName =&gt; streetName.includes('de'));</span><br><span class="line"></span><br><span class="line">      // 7. sort Exercise</span><br><span class="line">      // Sort the people alphabetically by last name</span><br><span class="line">      const alpha = people.sort((lastOne, nextOne) =&gt; &#123;</span><br><span class="line">        const [aLast, aFirst] = lastOne.split(", ");</span><br><span class="line">        const [bLast, bFirst] = nextOne.split(", ");</span><br><span class="line">        return aLast &gt; bLast ? 1 : -1;</span><br><span class="line">      &#125;);</span><br><span class="line">      console.log(alpha);</span><br><span class="line"></span><br><span class="line">      // 8. Reduce Exercise</span><br><span class="line">      // Sum up the instances of each of these</span><br><span class="line">      const data = [</span><br><span class="line">        "car",</span><br><span class="line">        "car",</span><br><span class="line">        "truck",</span><br><span class="line">        "truck",</span><br><span class="line">        "bike",</span><br><span class="line">        "walk",</span><br><span class="line">        "car",</span><br><span class="line">        "van",</span><br><span class="line">        "bike",</span><br><span class="line">        "walk",</span><br><span class="line">        "car",</span><br><span class="line">        "van",</span><br><span class="line">        "car",</span><br><span class="line">        "truck",</span><br><span class="line">        "pogostick"</span><br><span class="line">      ];</span><br><span class="line"></span><br><span class="line">      const transportation = data.reduce(function(obj, item) &#123;</span><br><span class="line">        if (!obj[item]) &#123;</span><br><span class="line">          obj[item] = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        obj[item]++;</span><br><span class="line">        return obj;</span><br><span class="line">      &#125;, &#123;&#125;);</span><br><span class="line"></span><br><span class="line">      console.log(transportation);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><hr><br><h2 id="學習筆記"><a href="#學習筆記" class="headerlink" title="學習筆記"></a>學習筆記</h2><br><h4 id="★-console-table"><a href="#★-console-table" class="headerlink" title="★ console.table()"></a>★ console.table()</h4><p><code>console.table()</code> 可以使資料以表格的方式呈現。</p><p>範例：</p><p>假設有個陣列 people</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> people = [</span><br><span class="line">  &#123; <span class="attr">name</span>: <span class="string">"Chai"</span>, <span class="attr">favorites</span>: <span class="string">"dessert"</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">name</span>: <span class="string">"Jay"</span>, <span class="attr">favorites</span>: <span class="string">"novel"</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">name</span>: <span class="string">"Kawa"</span>, <span class="attr">favorites</span>: <span class="string">"baseball"</span> &#125;</span><br><span class="line">];</span><br></pre></td></tr></table></figure><ul><li><p>使用 <code>console.log(people)</code> 輸出，會得到這樣的樹狀結構</p><br><img src="https://lh3.googleusercontent.com/TgTKxl1Brro_8IH3hY21ZfBoTQT7_n8lWEHd6xPQGVsTQAnXe2v7nb7C_SMbFkSUs4mhvFHfW6Y0gWEzw1ONxvfEElDd3ZfFJQjWAEn9kH1vOCp8X9UxEI4lzetd8ZbnL1j8BGIO_A=w1200" alt="console.log(people)"><br></li><li><p>使用 <code>console.table(people)</code> 輸出，則會得到整齊的表格</p><br><img src="https://lh3.googleusercontent.com/1tiNMda7OvpTkd55GT-o1B1PiyC8FpqfB9KUMyyLLsGtPLMKVUSNnrRZqiobk8xw5Wmk_8_lGXQtqNYfButvs7VXm43eRhMIoUh2NBUSi3CGXbfv1OeBzuWta4Qlmft8r_SR0fO-Tg=w1200" alt="console.table(people)"><br></li></ul><p>＊除了 <code>console.log()</code> 以及 <code>console.table()</code> 以外，還有許多 console 方法，可以參考：<a href="https://developer.mozilla.org/en-US/docs/Web/API/Console" target="_blank" rel="noopener">https://developer.mozilla.org/en-US/docs/Web/API/Console</a><br><br></p><h4 id="★-Array-from"><a href="#★-Array-from" class="headerlink" title="★ Array.from()"></a>★ Array.from()</h4><p><code>Array.from()</code> 方法會從類陣列（array-like）或是可迭代（iterable）物件建立一個新的 Array 實體。</p><p>範例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.from(<span class="string">"Chai"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// ["C", "h", "a", "i"]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Array</span>.from([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], x =&gt; x + x);</span><br><span class="line"><span class="comment">// [2, 4, 6]</span></span><br></pre></td></tr></table></figure><br><hr><p>接著是課程中使用的陣列方法們</p><br><h4 id="★-Array-filter"><a href="#★-Array-filter" class="headerlink" title="★ Array.filter()"></a>★ Array.filter()</h4><p><code>filter()</code> 方法會建立一個新陣列，新陣列是經指定之函式運算後，由原陣列中通過該函式檢驗之元素所構成的。</p><p>範例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> books = [</span><br><span class="line">  <span class="string">"Three Act Tragedy"</span>,</span><br><span class="line">  <span class="string">"The A.B.C. Murders"</span>,</span><br><span class="line">  <span class="string">"Cards on the Table"</span>,</span><br><span class="line">  <span class="string">"And Then There Were None"</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 篩選出第一個字為 'T' 的書</span></span><br><span class="line"><span class="keyword">const</span> result = books.filter(<span class="function"><span class="params">book</span> =&gt;</span> book.charAt(<span class="number">0</span>) === <span class="string">"T"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br><span class="line"><span class="comment">// Array ["Three Act Tragedy", "The A.B.C. Murders"]</span></span><br></pre></td></tr></table></figure><br><h4 id="★-Array-map"><a href="#★-Array-map" class="headerlink" title="★ Array.map()"></a>★ Array.map()</h4><p><code>map()</code> 方法會建立一個新陣列，其內容為原陣列的每一個元素經由回呼函式運算後所回傳的結果之集合。</p><p>範例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> array1 = [<span class="string">"Chai"</span>, <span class="string">"Jay"</span>, <span class="string">"Kawa"</span>, <span class="string">"Annie"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 傳給 map 一個函式</span></span><br><span class="line"><span class="keyword">const</span> map1 = array1.map(<span class="function"><span class="params">x</span> =&gt;</span> <span class="string">`super cute <span class="subst">$&#123;x&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(map1);</span><br><span class="line"><span class="comment">// Array ["super cute Chai", "super cute Jay", "super cute Kawa", "super cute Annie"]</span></span><br></pre></td></tr></table></figure><br><h4 id="★-Array-sort"><a href="#★-Array-sort" class="headerlink" title="★ Array.sort()"></a>★ Array.sort()</h4><p><code>sort()</code> 方法會對陣列元素進行排序，並回傳此陣列。</p><p>語法：<code>arr.sort([compareFunction])</code></p><p>compareFunction 為自定義的排序函式。假如省略此參數，陣列將根據各個元素轉為字串後的每一個字元之 Unicode 編碼位置值進行排序。</p><p>＊注意：此發法會原地(in place)進行排序，會改變原陣列，並不是原陣列的拷貝。</p><p>範例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> names = [<span class="string">"Chai"</span>, <span class="string">"Jay"</span>, <span class="string">"Kawa"</span>, <span class="string">"Annie"</span>];</span><br><span class="line">names.sort();</span><br><span class="line"><span class="built_in">console</span>.log(names);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Array ["Annie", "Chai", "Jay", "Kawa"]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> array1 = [<span class="number">1</span>, <span class="number">40</span>, <span class="number">3</span>, <span class="number">21</span>, <span class="number">1000000</span>];</span><br><span class="line">array1.sort();</span><br><span class="line"><span class="built_in">console</span>.log(array1);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Array [1, 1000000, 21, 3, 40]</span></span><br></pre></td></tr></table></figure><p>如果有傳 <code>compareFunction</code> ，陣列元素們將根據比較函式之回傳值來排序。如果 <code>a</code> 和 <code>b</code> 為被比較之兩元素，則：</p><ul><li>若 <code>compareFunction(a, b)</code> 的回傳值小於 0，則會把 <code>a</code> 排在小於 <code>b</code> 之索引的位置，即 <code>a</code> 排在 <code>b</code> 前面。</li><li>若 <code>compareFunction(a, b)</code> 回傳 0，則 <code>a</code> 與 <code>b</code> 皆不會改變彼此的順序，但會與其他全部的元素比較來排序。備註：ECMAscript 標準並不保證這個行為，因此不是所有瀏覽器（如 Mozilla 版本在 2003 以前）都遵守此行為。</li><li>若 <code>compareFunction(a, b)</code> 的回傳值大於 0，則會把 <code>b</code> 排在小於 <code>a</code> 之索引的位置，即 <code>b</code> 排在 <code>a</code> 前面。</li><li><code>compareFunction(a, b)</code> 在給予一組特定元素 a 及 b 為此函數之兩引數時必須總是回傳相同的值。若回傳值不一致，排序順序則為 undefined。</li></ul><p>比較函式會是以下形式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">compare</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (在某排序標準下 a 小於 b) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (在某排序標準下 a 大於 b) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// a 必須等於 b</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>為了比較數字而不是字串，比較函式可以僅僅利用 <code>a</code> 減 <code>b</code>。以下函式將會升冪排序陣列：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">compareNumbers</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a - b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>範例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> numbers = [<span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">3</span>];</span><br><span class="line">numbers.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a - b;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(numbers);</span><br><span class="line"></span><br><span class="line"><span class="comment">// [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure><br><h4 id="★-Array-reduce"><a href="#★-Array-reduce" class="headerlink" title="★ Array.reduce()"></a>★ Array.reduce()</h4><p><code>reduce()</code> 方法將一個累加器及陣列中每項元素（由左至右）傳入回呼函式，將陣列化為單一值。</p><p>語法： <code>arr.reduce(callback[accumulator, currentValue, currentIndex, array], initialValue)</code></p><p>＊注意：假如 <code>initialValue</code> 未被提供，<code>reduce()</code> 將會跳過第一個陣列索引，從陣列索引 1 開始執行回呼函式。若有提供 <code>initialValue</code>，則會由陣列索引 0 開始執行。</p><p>範例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> array1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">const</span> reducer = <span class="function">(<span class="params">accumulator, currentValue</span>) =&gt;</span> accumulator + currentValue;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(array1.reduce(reducer));</span><br><span class="line"><span class="comment">// 15</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 給初始值 5 ，所以為 5 + 1 + 2 + 3 + 4 + 5</span></span><br><span class="line"><span class="built_in">console</span>.log(array1.reduce(reducer, <span class="number">5</span>));</span><br><span class="line"><span class="comment">// 20</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JS30 Day04&lt;br&gt;對 JS 新手來說，這堂課非常重要。學會 Array 的各種方法，就可以解決大部分的問題！&lt;/p&gt;
    
    </summary>
    
    
      <category term="JS30" scheme="https://chaichai.site/categories/JS30/"/>
    
    
      <category term="程式筆記" scheme="https://chaichai.site/tags/%E7%A8%8B%E5%BC%8F%E7%AD%86%E8%A8%98/"/>
    
      <category term="Javascript" scheme="https://chaichai.site/tags/Javascript/"/>
    
      <category term="JS30" scheme="https://chaichai.site/tags/JS30/"/>
    
  </entry>
  
  <entry>
    <title>Rails Environment</title>
    <link href="https://chaichai.site/2019/11/07/rails_env/"/>
    <id>https://chaichai.site/2019/11/07/rails_env/</id>
    <published>2019-11-06T16:00:00.000Z</published>
    <updated>2019-11-06T12:57:22.358Z</updated>
    
    <content type="html"><![CDATA[<p>今天簡單地整理了基礎卻重要的概念：Rails 的環境 – Development / Test / Production。</p><a id="more"></a><hr><h2 id="Rails-的環境"><a href="#Rails-的環境" class="headerlink" title="Rails 的環境"></a>Rails 的環境</h2><p>Rails 的環境預設為以下三種：</p><ul><li>Development 開發</li><li>Test 測試</li><li>Production 上線</li></ul><p>在 <code>config/environments</code> 底下，有分別對應的設定檔：</p><ul><li>development.rb</li><li>test.rb</li><li>prodcution.rb</li></ul><p>在 <code>config/database.yml</code> 中，定義了三個環境所使用的資料庫設定，預設資料庫為 sqlite3：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SQLite version 3.x</span></span><br><span class="line"><span class="comment">#   gem install sqlite3</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   Ensure the SQLite 3 gem is defined in your Gemfile</span></span><br><span class="line"><span class="comment">#   gem 'sqlite3'</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="symbol">default:</span> &amp;default</span><br><span class="line">  <span class="symbol">adapter:</span> sqlite3</span><br><span class="line">  <span class="symbol">pool:</span> &lt;%= ENV.fetch(<span class="string">"RAILS_MAX_THREADS"</span>) &#123; <span class="number">5</span> &#125; =%&gt;</span><br><span class="line"><span class="symbol">timeout:</span> <span class="number">5000</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">development:</span></span><br><span class="line">  &lt;&lt;: *default</span><br><span class="line">  <span class="symbol">database:</span> db/development.sqlite3</span><br><span class="line"></span><br><span class="line"><span class="comment"># Warning: The database defined as "test" will be erased and</span></span><br><span class="line"><span class="comment"># re-generated from your development database when you run "rake".</span></span><br><span class="line"><span class="comment"># Do not set this db to the same as development or production.</span></span><br><span class="line"><span class="symbol">test:</span></span><br><span class="line">  &lt;&lt;: *default</span><br><span class="line">  <span class="symbol">database:</span> db/test.sqlite3</span><br><span class="line"></span><br><span class="line"><span class="symbol">production:</span></span><br><span class="line">  &lt;&lt;: *default</span><br><span class="line">  <span class="symbol">database:</span> db/production.sqlite3</span><br></pre></td></tr></table></figure><br><hr><br><h2 id="環境的差異"><a href="#環境的差異" class="headerlink" title="環境的差異"></a>環境的差異</h2><h3 id="Development-開發環境"><a href="#Development-開發環境" class="headerlink" title="Development 開發環境"></a>Development 開發環境</h3><ul><li><p>在開發環境下，修改一個東西後，只要重整瀏覽器就可以看到更改後的結果。因為 Rails 關閉 cache，讓每一次的 HTTP request 都會重新載入 class，不需要手動重啟 server，以加快開發週期。</p></li><li><p>Rails 只有在連線來自本地端的時候，會將錯誤訊息顯示在瀏覽器上，讓開發人員可以查詢錯誤的設定。</p></li></ul><p>（若還沒有 migrate， Rails 也會提醒你記得執行 rails db:migrate）</p><br><h3 id="Test-測試環境"><a href="#Test-測試環境" class="headerlink" title="Test 測試環境"></a>Test 測試環境</h3><ul><li><p>在專用的測試資料庫中，可以獨立設置、處理測試數據，用完即清除，不用擔心影響到開發或上線資料庫。</p></li><li><p>當通過測試時，會輸出點 . (dot)；測試失敗時，會出現 F ；當測試出錯時，會丟 E 出來；最後一行則是摘要。</p><p>範例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> bin/rake test test/models/article_test.rb test_should_not_save_article_without_title</span><br><span class="line">F</span><br><span class="line"></span><br><span class="line">Finished tests in 0.044632s, 22.4054 tests/s, 22.4054 assertions/s.</span><br><span class="line"></span><br><span class="line">  1) Failure:</span><br><span class="line">test_should_not_save_article_without_title(ArticleTest) [test/models/article_test.rb:6]:</span><br><span class="line">Failed assertion, no message given.</span><br><span class="line"></span><br><span class="line">1 tests, 1 assertions, 1 failures, 0 errors, 0 skips</span><br></pre></td></tr></table></figure></li></ul><p>＊注意：Rails 預設是用關聯式資料庫的 Transaction 功能，所以每次之間增修的資料都會清除。但是如果資料庫不支援（例如 MySQL 的 MyISAM 格式就不支援）或是用如 MongoDB 的 NoSQL，就要自己處理。</p><br><h3 id="Production-上線環境"><a href="#Production-上線環境" class="headerlink" title="Production 上線環境"></a>Production 上線環境</h3><ul><li>在開發環境下 <code>cache_classes = false</code> ，但上線環境為了增加效能，減少 request 數量，預設 <code>cache_classes = true</code> ，class 檔案載入記憶體後就快取起來了。</li><li>出現例外錯誤時，會依照錯誤種類，印出 <code>public</code> 資料夾底下 <code>500.html</code>、<code>404.html</code>、<code>422.html</code>檔案。</li></ul><br><hr><br><h3 id="預設設定檔整理"><a href="#預設設定檔整理" class="headerlink" title="預設設定檔整理"></a>預設設定檔整理</h3><table><thead><tr><th align="left">項目</th><th align="center">development</th><th align="center">prodcution</th><th align="center">test</th></tr></thead><tbody><tr><td align="left">cache_classes</td><td align="center">false</td><td align="center">true</td><td align="center">true</td></tr><tr><td align="left">eager_load</td><td align="center">false</td><td align="center">true</td><td align="center">false</td></tr><tr><td align="left">serve_static_files</td><td align="center"></td><td align="center"></td><td align="center">true</td></tr><tr><td align="left">static_cache_control</td><td align="center"></td><td align="center"></td><td align="center">註 4</td></tr><tr><td align="left">consider_all_requests_local</td><td align="center">true</td><td align="center">false</td><td align="center">true</td></tr><tr><td align="left">serve_static_files</td><td align="center"></td><td align="center">註 2</td><td align="center"></td></tr><tr><td align="left">log_level</td><td align="center"></td><td align="center">:debug</td><td align="center"></td></tr><tr><td align="left">log_formatter</td><td align="center"></td><td align="center">註 3</td><td align="center"></td></tr><tr><td align="left"><strong>action_controller</strong></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="left">perform_caching</td><td align="center">false</td><td align="center">true</td><td align="center">false</td></tr><tr><td align="left">allow_forgery_protection</td><td align="center"></td><td align="center"></td><td align="center">false</td></tr><tr><td align="left"><strong>action_dispatch</strong></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="left">show_exceptions</td><td align="center"></td><td align="center"></td><td align="center">false</td></tr><tr><td align="left"><strong>action_mailer</strong></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="left">delivery_method</td><td align="center">:letter_opener</td><td align="center"></td><td align="center">:test</td></tr><tr><td align="left">default_url_options</td><td align="center">註 1</td><td align="center"></td><td align="center"></td></tr><tr><td align="left">raise_delivery_errors</td><td align="center">false</td><td align="center"></td><td align="center"></td></tr><tr><td align="left"><strong>active_support</strong></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="left">test_order</td><td align="center"></td><td align="center"></td><td align="center">:random</td></tr><tr><td align="left">deprecation</td><td align="center">:log</td><td align="center">:notify</td><td align="center">:stderr</td></tr><tr><td align="left"><strong>active_record</strong></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="left">migration_error</td><td align="center">:page_load</td><td align="center"></td><td align="center"></td></tr><tr><td align="left">dump_schema_after_migration</td><td align="center"></td><td align="center">false</td><td align="center"></td></tr><tr><td align="left"><strong>assets</strong></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="left">debug</td><td align="center">true</td><td align="center"></td><td align="center"></td></tr><tr><td align="left">digest</td><td align="center">true</td><td align="center">true</td><td align="center"></td></tr><tr><td align="left">raise_runtime_errors</td><td align="center">true</td><td align="center"></td><td align="center"></td></tr><tr><td align="left">js_compressor</td><td align="center"></td><td align="center">:uglifier</td><td align="center"></td></tr><tr><td align="left">compile</td><td align="center"></td><td align="center">false</td><td align="center"></td></tr><tr><td align="left"><strong>i18n</strong></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="left">fallbacks</td><td align="center"></td><td align="center">true</td><td align="center"></td></tr></tbody></table><br><hr><p>參考資料：</p><p><a href="https://rails.ruby.tw/testing.html" target="_blank" rel="noopener">https://rails.ruby.tw/testing.html</a><br><a href="http://teotti.com/use-of-rails-environments/" target="_blank" rel="noopener">http://teotti.com/use-of-rails-environments/</a><br><a href="https://blog.niclin.tw/2015/12/09/為什麼-rails-要分-production-test-development-三種環境/" target="_blank" rel="noopener">https://blog.niclin.tw/2015/12/09/%E7%82%BA%E4%BB%80%E9%BA%BC-rails-%E8%A6%81%E5%88%86-production-test-development-%E4%B8%89%E7%A8%AE%E7%92%B0%E5%A2%83/</a><br><a href="http://james1239090-blog.logdown.com/posts/773369-finish-the-rails-environment-development-test-production" target="_blank" rel="noopener">http://james1239090-blog.logdown.com/posts/773369-finish-the-rails-environment-development-test-production</a><br><a href="https://openhome.cc/Gossip/Rails/Test.html" target="_blank" rel="noopener">https://openhome.cc/Gossip/Rails/Test.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天簡單地整理了基礎卻重要的概念：Rails 的環境 – Development / Test / Production。&lt;/p&gt;
    
    </summary>
    
    
      <category term="學習日誌" scheme="https://chaichai.site/categories/%E5%AD%B8%E7%BF%92%E6%97%A5%E8%AA%8C/"/>
    
    
      <category term="學習日誌" scheme="https://chaichai.site/tags/%E5%AD%B8%E7%BF%92%E6%97%A5%E8%AA%8C/"/>
    
      <category term="Ruby" scheme="https://chaichai.site/tags/Ruby/"/>
    
      <category term="Rails" scheme="https://chaichai.site/tags/Rails/"/>
    
  </entry>
  
  <entry>
    <title>JS30 Day03 CSS Variables and JS</title>
    <link href="https://chaichai.site/2019/11/05/js30-03/"/>
    <id>https://chaichai.site/2019/11/05/js30-03/</id>
    <published>2019-11-04T16:00:00.000Z</published>
    <updated>2019-11-07T16:15:42.355Z</updated>
    
    <content type="html"><![CDATA[<p>JS30 Day03<br>以前學切版時很少使用 CSS 變數，這堂課用 CSS 變數 + JS 來即時改變畫面，才發現它非常實用，以後要多加利用！</p><a id="more"></a><hr><h1 id="CSS-Variables-and-JS"><a href="#CSS-Variables-and-JS" class="headerlink" title="CSS Variables and JS"></a>CSS Variables and JS</h1><h2 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h2><ul><li>功能<ul><li>拉動、點擊</li></ul></li><li>畫面<ul><li>改變控制項會立即改變畫面</li></ul></li></ul><br><hr><br><h3 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index-START.html"></a>index-START.html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Scoped CSS Variables and JS<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Update CSS Variables with <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hl"</span>&gt;</span>JS<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"controls"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"spacing"</span>&gt;</span>Spacing:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">        <span class="attr">id</span>=<span class="string">"spacing"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">"range"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">name</span>=<span class="string">"spacing"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">min</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">max</span>=<span class="string">"200"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">value</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-sizing</span>=<span class="string">"px"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"blur"</span>&gt;</span>Blur:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">        <span class="attr">id</span>=<span class="string">"blur"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">"range"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">name</span>=<span class="string">"blur"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">min</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">max</span>=<span class="string">"25"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">value</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-sizing</span>=<span class="string">"px"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"base"</span>&gt;</span>Base Color<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"base"</span> <span class="attr">type</span>=<span class="string">"color"</span> <span class="attr">name</span>=<span class="string">"base"</span> <span class="attr">value</span>=<span class="string">"#ffc600"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://source.unsplash.com/7bwQXzbF6KE/800x500"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">      /*</span><br><span class="line">      misc styles, nothing to do with CSS variables</span><br><span class="line">    */</span><br><span class="line"></span><br><span class="line">      body &#123;</span><br><span class="line">        text-align: center;</span><br><span class="line">        background: #193549;</span><br><span class="line">        color: white;</span><br><span class="line">        font-family: "helvetica neue", sans-serif;</span><br><span class="line">        font-weight: 100;</span><br><span class="line">        font-size: 50px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .controls &#123;</span><br><span class="line">        margin-bottom: 50px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      input &#123;</span><br><span class="line">        width: 100px;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h3 id="index-FINISHED-html"><a href="#index-FINISHED-html" class="headerlink" title="index-FINISHED.html"></a>index-FINISHED.html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Scoped CSS Variables and JS<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Update CSS Variables with <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hl"</span>&gt;</span>JS<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"controls"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"spacing"</span>&gt;</span>Spacing:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">        <span class="attr">id</span>=<span class="string">"spacing"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">"range"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">name</span>=<span class="string">"spacing"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">min</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">max</span>=<span class="string">"200"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">value</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-sizing</span>=<span class="string">"px"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"blur"</span>&gt;</span>Blur:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">        <span class="attr">id</span>=<span class="string">"blur"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">"range"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">name</span>=<span class="string">"blur"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">min</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">max</span>=<span class="string">"25"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">value</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-sizing</span>=<span class="string">"px"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"base"</span>&gt;</span>Base Color<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"base"</span> <span class="attr">type</span>=<span class="string">"color"</span> <span class="attr">name</span>=<span class="string">"base"</span> <span class="attr">value</span>=<span class="string">"#ffc600"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://source.unsplash.com/7bwQXzbF6KE/800x500"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">      :root &#123;</span><br><span class="line">        --base: #ffc600;</span><br><span class="line">        --spacing: 10px;</span><br><span class="line">        --blur: 10px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      img &#123;</span><br><span class="line">        padding: var(--spacing);</span><br><span class="line">        background: var(--base);</span><br><span class="line">        filter: blur(var(--blur));</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .hl &#123;</span><br><span class="line">        color: var(--base);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      /*</span><br><span class="line">      misc styles, nothing to do with CSS variables</span><br><span class="line">    */</span><br><span class="line"></span><br><span class="line">      body &#123;</span><br><span class="line">        text-align: center;</span><br><span class="line">        background: #193549;</span><br><span class="line">        color: white;</span><br><span class="line">        font-family: "helvetica neue", sans-serif;</span><br><span class="line">        font-weight: 100;</span><br><span class="line">        font-size: 50px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .controls &#123;</span><br><span class="line">        margin-bottom: 50px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      input &#123;</span><br><span class="line">        width: 100px;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">      const inputs = document.querySelectorAll(".controls input");</span><br><span class="line"></span><br><span class="line">      function handleUpdate() &#123;</span><br><span class="line">        const suffix = this.dataset.sizing || "";</span><br><span class="line">        document.documentElement.style.setProperty(</span><br><span class="line">          `--$&#123;this.name&#125;`,</span><br><span class="line">          this.value + suffix</span><br><span class="line">        );</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      inputs.forEach(input =&gt; input.addEventListener("change", handleUpdate));</span><br><span class="line">      inputs.forEach(input =&gt;</span><br><span class="line">        input.addEventListener("mousemove", handleUpdate)</span><br><span class="line">      );</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><hr><br><h2 id="學習筆記"><a href="#學習筆記" class="headerlink" title="學習筆記"></a>學習筆記</h2><br><h4 id="★-CSS-Variable"><a href="#★-CSS-Variable" class="headerlink" title="★ CSS Variable"></a>★ CSS Variable</h4><p>CSS 變數可以宣告在任何 CSS Selector 的範圍內。</p><p>命名方式：開頭 <code>--</code> ，後面接著英文或數字。例如：<code>--bg-color: red;</code></p><ul><li><p>在 CSS 使用變數</p><p>使用 <code>var()</code>代表「使用變數」，並且將「宣告名稱」丟進來</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">element</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--bg-color);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在 JS 修改 CSS 變數宣告</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.style.setProperty(<span class="string">"--bg-color"</span>, <span class="string">"blue"</span>);</span><br></pre></td></tr></table></figure></li></ul><br><h4 id="★-dataset"><a href="#★-dataset" class="headerlink" title="★ dataset"></a>★ dataset</h4><p>在 day01 有提過自定義屬性 data-attribute 的用法，<code>dataset</code> 就是 JS 把所有 data-attribute 的資料取出的方法。也等同於 <code>getAttribute()</code> 方法。</p><p>範例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"student"</span> <span class="attr">data-number</span>=<span class="string">"1234"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">document</span>.querySelector(<span class="string">"#student"</span>).dataset.number; <span class="comment">// 輸出 1234</span></span></span><br><span class="line"><span class="javascript">  <span class="built_in">document</span>.querySelector(<span class="string">"#student"</span>).getAttribute(<span class="string">"data-number"</span>); <span class="comment">// 輸出 1234</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h4 id="★-documentElement"><a href="#★-documentElement" class="headerlink" title="★ documentElement"></a>★ documentElement</h4><p><code>document.documentElement</code> 回傳文件中的根元素 (root element) ，通常用於取得 html 的 HTMLHtmlElement 物件。</p><p><code>document.querySelector(&#39;:root&#39;) === document.documentElement</code></p><p>範例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span>顯示文件節點<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"myFunction()"</span>&gt;</span>點我點我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> x = <span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>);</span></span><br><span class="line"><span class="javascript">    x.innerHTML = <span class="built_in">document</span>.documentElement;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="comment">// 輸出 [object HTMLHtmlElement]</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h4 id="★-setProperty"><a href="#★-setProperty" class="headerlink" title="★ setProperty()"></a>★ setProperty()</h4><p><code>setProperty()</code> 可以宣告一個新的 CSS 屬性，或是更改已存在的屬性。</p><p>語法：<code>object.setProperty(propertyname, value, priority)</code></p><p>範例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">h1&#123;</span><br><span class="line">color: red;</span><br><span class="line">background-color: black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"test01"</span>&gt;</span>setProperty()方法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"myFunction()"</span>&gt;</span>點我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// 點擊後 color 顏色更換</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> object01 = <span class="built_in">document</span>.getElementById(<span class="string">'test01'</span>).style</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> setprop = object01.setProperty(<span class="string">"color"</span>, <span class="string">"yellow"</span>, <span class="string">"important"</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JS30 Day03&lt;br&gt;以前學切版時很少使用 CSS 變數，這堂課用 CSS 變數 + JS 來即時改變畫面，才發現它非常實用，以後要多加利用！&lt;/p&gt;
    
    </summary>
    
    
      <category term="JS30" scheme="https://chaichai.site/categories/JS30/"/>
    
    
      <category term="程式筆記" scheme="https://chaichai.site/tags/%E7%A8%8B%E5%BC%8F%E7%AD%86%E8%A8%98/"/>
    
      <category term="Javascript" scheme="https://chaichai.site/tags/Javascript/"/>
    
      <category term="JS30" scheme="https://chaichai.site/tags/JS30/"/>
    
  </entry>
  
  <entry>
    <title>JS30 Day02 JS and CSS Clock</title>
    <link href="https://chaichai.site/2019/11/03/js30-02/"/>
    <id>https://chaichai.site/2019/11/03/js30-02/</id>
    <published>2019-11-02T16:00:00.000Z</published>
    <updated>2019-11-03T03:04:00.040Z</updated>
    
    <content type="html"><![CDATA[<p>JS30 Day02<br>這次的課程提到了 CSS 與 JS 的 transform 屬性，對動畫有多一點的了解～</p><a id="more"></a><hr><h1 id="JS-and-CSS-Clock"><a href="#JS-and-CSS-Clock" class="headerlink" title="JS and CSS Clock"></a>JS and CSS Clock</h1><h2 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h2><ul><li>功能<ul><li>顯示目前的時間<ul><li>更新時針、分針、秒針</li></ul></li></ul></li><li>畫面<ul><li>讀得到目前的時間</li><li>秒針要有「真實的滴答」動作</li></ul></li></ul><br><hr><br><h3 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index-START.html"></a>index-START.html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS + CSS Clock<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clock"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clock-face"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hand hour-hand"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hand min-hand"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hand second-hand"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">      html &#123;</span><br><span class="line">        background: #018ded url(http://unsplash.it/1500/1000?image=881&amp;blur=5);</span><br><span class="line">        background-size: cover;</span><br><span class="line">        font-family: "helvetica neue";</span><br><span class="line">        text-align: center;</span><br><span class="line">        font-size: 10px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      body &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        font-size: 2rem;</span><br><span class="line">        display: flex;</span><br><span class="line">        flex: 1;</span><br><span class="line">        min-height: 100vh;</span><br><span class="line">        align-items: center;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .clock &#123;</span><br><span class="line">        width: 30rem;</span><br><span class="line">        height: 30rem;</span><br><span class="line">        border: 20px solid white;</span><br><span class="line">        border-radius: 50%;</span><br><span class="line">        margin: 50px auto;</span><br><span class="line">        position: relative;</span><br><span class="line">        padding: 2rem;</span><br><span class="line">        box-shadow: 0 0 0 4px rgba(0, 0, 0, 0.1), inset 0 0 0 3px #efefef,</span><br><span class="line">          inset 0 0 10px black, 0 0 10px rgba(0, 0, 0, 0.2);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .clock-face &#123;</span><br><span class="line">        position: relative;</span><br><span class="line">        width: 100%;</span><br><span class="line">        height: 100%;</span><br><span class="line">        transform: translateY(</span><br><span class="line">          -3px</span><br><span class="line">        ); /* account for the height of the clock hands */</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .hand &#123;</span><br><span class="line">        width: 50%;</span><br><span class="line">        height: 6px;</span><br><span class="line">        background: black;</span><br><span class="line">        position: absolute;</span><br><span class="line">        top: 50%;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h3 id="index-FINISHED-html"><a href="#index-FINISHED-html" class="headerlink" title="index-FINISHED.html"></a>index-FINISHED.html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS + CSS Clock<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clock"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clock-face"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hand hour-hand"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hand min-hand"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hand second-hand"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">      html &#123;</span><br><span class="line">        background: #018ded url(http://unsplash.it/1500/1000?image=881&amp;blur=5);</span><br><span class="line">        background-size: cover;</span><br><span class="line">        font-family: "helvetica neue";</span><br><span class="line">        text-align: center;</span><br><span class="line">        font-size: 10px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      body &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        font-size: 2rem;</span><br><span class="line">        display: flex;</span><br><span class="line">        flex: 1;</span><br><span class="line">        min-height: 100vh;</span><br><span class="line">        align-items: center;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .clock &#123;</span><br><span class="line">        width: 30rem;</span><br><span class="line">        height: 30rem;</span><br><span class="line">        border: 20px solid white;</span><br><span class="line">        border-radius: 50%;</span><br><span class="line">        margin: 50px auto;</span><br><span class="line">        position: relative;</span><br><span class="line">        padding: 2rem;</span><br><span class="line">        box-shadow: 0 0 0 4px rgba(0, 0, 0, 0.1), inset 0 0 0 3px #efefef,</span><br><span class="line">          inset 0 0 10px black, 0 0 10px rgba(0, 0, 0, 0.2);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .clock-face &#123;</span><br><span class="line">        position: relative;</span><br><span class="line">        width: 100%;</span><br><span class="line">        height: 100%;</span><br><span class="line">        transform: translateY(</span><br><span class="line">          -3px</span><br><span class="line">        ); /* account for the height of the clock hands */</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .hand &#123;</span><br><span class="line">        width: 50%;</span><br><span class="line">        height: 6px;</span><br><span class="line">        background: black;</span><br><span class="line">        position: absolute;</span><br><span class="line">        top: 50%;</span><br><span class="line">        transform-origin: 100%;</span><br><span class="line">        transform: rotate(90deg);</span><br><span class="line">        transition: all 0.05s;</span><br><span class="line">        transition-timing-function: cubic-bezier(0.1, 2.7, 0.58, 1);</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">      const secondHand = document.querySelector(".second-hand");</span><br><span class="line">      const minsHand = document.querySelector(".min-hand");</span><br><span class="line">      const hourHand = document.querySelector(".hour-hand");</span><br><span class="line"></span><br><span class="line">      function setDate() &#123;</span><br><span class="line">        const now = new Date();</span><br><span class="line"></span><br><span class="line">        const seconds = now.getSeconds();</span><br><span class="line">        const secondsDegrees = (seconds / 60) * 360 + 90;</span><br><span class="line">        secondHand.style.transform = `rotate($&#123;secondsDegrees&#125;deg)`;</span><br><span class="line"></span><br><span class="line">        const mins = now.getMinutes();</span><br><span class="line">        const minsDegrees = (mins / 60) * 360 + (seconds / 60) * 6 + 90;</span><br><span class="line">        minsHand.style.transform = `rotate($&#123;minsDegrees&#125;deg)`;</span><br><span class="line"></span><br><span class="line">        const hour = now.getHours();</span><br><span class="line">        const hourDegrees = (hour / 12) * 360 + (mins / 60) * 30 + 90;</span><br><span class="line">        hourHand.style.transform = `rotate($&#123;hourDegrees&#125;deg)`;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      setInterval(setDate, 1000);</span><br><span class="line"></span><br><span class="line">      setDate();</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><hr><br><h2 id="學習筆記"><a href="#學習筆記" class="headerlink" title="學習筆記"></a>學習筆記</h2><br><h4 id="★-CSS-transform-origin"><a href="#★-CSS-transform-origin" class="headerlink" title="★ CSS transform-origin"></a>★ CSS transform-origin</h4><p>CSS 內的 <code>transform-origin</code> 屬性可以設定元素變化的原點。在這個範例中，設定為 100%(right)可以使其從時鐘面的中心點開始旋轉。</p><p>範例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* One-value syntax */</span></span><br><span class="line"><span class="selector-tag">transform-origin</span>: 2<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">transform-origin</span>: <span class="selector-tag">bottom</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* x-offset | y-offset */</span></span><br><span class="line"><span class="selector-tag">transform-origin</span>: 3<span class="selector-tag">cm</span> 2<span class="selector-tag">px</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* x-offset-keyword | y-offset */</span></span><br><span class="line"><span class="selector-tag">transform-origin</span>: <span class="selector-tag">left</span> 2<span class="selector-tag">px</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* x-offset-keyword | y-offset-keyword */</span></span><br><span class="line"><span class="selector-tag">transform-origin</span>: <span class="selector-tag">right</span> <span class="selector-tag">top</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* y-offset-keyword | x-offset-keyword */</span></span><br><span class="line"><span class="selector-tag">transform-origin</span>: <span class="selector-tag">top</span> <span class="selector-tag">right</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* x-offset | y-offset | z-offset */</span></span><br><span class="line"><span class="selector-tag">transform-origin</span>: 2<span class="selector-tag">px</span> 30% 10<span class="selector-tag">px</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* x-offset-keyword | y-offset | z-offset */</span></span><br><span class="line"><span class="selector-tag">transform-origin</span>: <span class="selector-tag">left</span> 5<span class="selector-tag">px</span> <span class="selector-tag">-3px</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* x-offset-keyword | y-offset-keyword | z-offset */</span></span><br><span class="line"><span class="selector-tag">transform-origin</span>: <span class="selector-tag">right</span> <span class="selector-tag">bottom</span> 2<span class="selector-tag">cm</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* y-offset-keyword | x-offset-keyword | z-offset */</span></span><br><span class="line"><span class="selector-tag">transform-origin</span>: <span class="selector-tag">bottom</span> <span class="selector-tag">right</span> 2<span class="selector-tag">cm</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Global values */</span></span><br><span class="line"><span class="selector-tag">transform-origin</span>: <span class="selector-tag">inherit</span>;</span><br><span class="line"><span class="selector-tag">transform-origin</span>: <span class="selector-tag">initial</span>;</span><br><span class="line"><span class="selector-tag">transform-origin</span>: <span class="selector-tag">unset</span>;</span><br></pre></td></tr></table></figure><br><h4 id="★-CSS-transform"><a href="#★-CSS-transform" class="headerlink" title="★ CSS transform"></a>★ CSS transform</h4><p>CSS 內的 <code>transition</code> 屬性可以進行 2D 和 3D 的變化。</p><p><code>transition</code> 共包含四種子屬性： <code>transition-property</code> , <code>transition-duration</code> , <code>transition-timing-function</code> , <code>transition-delay</code> 。</p><ul><li>transition-property：指定做變換的 CSS 屬性。</li><li>transition-duration：變換過程的總時間。</li><li>transition-timing-function：定義變換時的速度曲線。</li><li>transition-delay：延遲多久後開始變換。</li></ul><p>範例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Apply to 1 property */</span></span><br><span class="line"><span class="comment">/* property name | duration */</span></span><br><span class="line"><span class="selector-tag">transition</span>: <span class="selector-tag">margin-right</span> 4<span class="selector-tag">s</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* property name | duration | delay */</span></span><br><span class="line"><span class="selector-tag">transition</span>: <span class="selector-tag">margin-right</span> 4<span class="selector-tag">s</span> 1<span class="selector-tag">s</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* property name | duration | timing function */</span></span><br><span class="line"><span class="selector-tag">transition</span>: <span class="selector-tag">margin-right</span> 4<span class="selector-tag">s</span> <span class="selector-tag">ease-in-out</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* property name | duration | timing function | delay */</span></span><br><span class="line"><span class="selector-tag">transition</span>: <span class="selector-tag">margin-right</span> 4<span class="selector-tag">s</span> <span class="selector-tag">ease-in-out</span> 1<span class="selector-tag">s</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Apply to 2 properties */</span></span><br><span class="line"><span class="selector-tag">transition</span>: <span class="selector-tag">margin-right</span> 4<span class="selector-tag">s</span>, <span class="selector-tag">color</span> 1<span class="selector-tag">s</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Apply to all changed properties */</span></span><br><span class="line"><span class="selector-tag">transition</span>: <span class="selector-tag">all</span> 0<span class="selector-class">.5s</span> <span class="selector-tag">ease-out</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Global values */</span></span><br><span class="line"><span class="selector-tag">transition</span>: <span class="selector-tag">inherit</span>;</span><br><span class="line"><span class="selector-tag">transition</span>: <span class="selector-tag">initial</span>;</span><br><span class="line"><span class="selector-tag">transition</span>: <span class="selector-tag">unset</span>;</span><br></pre></td></tr></table></figure><br><h4 id="★-CSS-transition-timing-function"><a href="#★-CSS-transition-timing-function" class="headerlink" title="★ CSS transition-timing-function"></a>★ CSS transition-timing-function</h4><p><code>transition</code> 中其中一個子屬性 <code>transition-timing-function</code> 定義過渡效果的速度曲線。預設為 <code>ease</code>。</p><table><thead><tr><th align="left">值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">linear</td><td align="left">規定以相同速度開始至結束的過渡效果（等於 cubic-bezier(0,0,1,1)）。</td></tr><tr><td align="left">ease</td><td align="left">規定慢速開始，然後變快，然後慢速結束的過渡效果（cubic-bezier(0.25,0.1,0.25,1)）。</td></tr><tr><td align="left">ease-in</td><td align="left">規定以慢速開始的過渡效果（等於 cubic-bezier(0.42,0,1,1)）。</td></tr><tr><td align="left">ease-out</td><td align="left">規定以慢速結束的過渡效果（等於 cubic-bezier(0,0,0.58,1)）。</td></tr><tr><td align="left">ease-in-out</td><td align="left">規定以慢速開始和結束的過渡效果（等於 cubic-bezier(0.42,0,0.58,1)）。</td></tr><tr><td align="left">cubic-bezier( <em>n</em> , <em>n</em> , <em>n</em> , <em>n</em> )</td><td align="left">在 cubic-bezier 函數中定義自己的值。可能的值是 0 至 1 之間的數值。</td></tr></tbody></table><br><h4 id="★-Date"><a href="#★-Date" class="headerlink" title="★ Date()"></a>★ Date()</h4><p>JS 取得時間的函式，需搭配 new 來使用，如 <code>new Date()</code>。</p><p>＊注意：JavaScript <code>Date</code> 物件只能由以 Date 作為建構子來產生，如果把 Date 作為一般的函式來呼叫（省略 new），將會得到一個字串而非 Date 物件。它並沒有物件實體語法（例如：以中刮號 [ ] 表示陣列的宣告方式）。</p><p>範例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(value);</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(dateString);</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(year, month[, day[, hour[, minutes[, seconds[, milliseconds]]]]]);</span><br></pre></td></tr></table></figure><ul><li>Date.prototype 方法<ul><li><code>date.getSeconds()</code>：取得當前秒</li><li><code>date.getMinutes()</code>：取得當前分鐘</li><li><code>date.getHours()</code>：取得當前小時</li></ul></li></ul><br><h4 id="★-style-transform"><a href="#★-style-transform" class="headerlink" title="★ style.transform"></a>★ style.transform</h4><p><code>transform</code> 屬性使物件進行 2D 或 3D 的轉換。例如：旋轉、縮放、移動或傾斜。</p><p>範例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"myFunction()"</span>&gt;</span>Try it<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myDIV"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>myDIV<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// Code for Safari</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">"myDIV"</span>).style.WebkitTransform = <span class="string">"rotate(20deg)"</span>;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// Code for IE9</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">"myDIV"</span>).style.msTransform = <span class="string">"rotate(20deg)"</span>;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// Standard syntax</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">"myDIV"</span>).style.transform = <span class="string">"rotate(20deg)"</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="comment">// 物件旋轉20度</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JS30 Day02&lt;br&gt;這次的課程提到了 CSS 與 JS 的 transform 屬性，對動畫有多一點的了解～&lt;/p&gt;
    
    </summary>
    
    
      <category term="JS30" scheme="https://chaichai.site/categories/JS30/"/>
    
    
      <category term="程式筆記" scheme="https://chaichai.site/tags/%E7%A8%8B%E5%BC%8F%E7%AD%86%E8%A8%98/"/>
    
      <category term="Javascript" scheme="https://chaichai.site/tags/Javascript/"/>
    
      <category term="JS30" scheme="https://chaichai.site/tags/JS30/"/>
    
  </entry>
  
  <entry>
    <title>JS30 Day01 Javascript Drum Kit</title>
    <link href="https://chaichai.site/2019/11/01/js30-01/"/>
    <id>https://chaichai.site/2019/11/01/js30-01/</id>
    <published>2019-10-31T16:00:00.000Z</published>
    <updated>2019-11-02T16:51:14.870Z</updated>
    
    <content type="html"><![CDATA[<p>JS30 Day01<br>第一天就學到了很多語法與實際應用，是個收穫非常豐富的開始！:D</p><a id="more"></a><hr><h1 id="Javascript-Drum-Kit"><a href="#Javascript-Drum-Kit" class="headerlink" title="Javascript Drum Kit"></a>Javascript Drum Kit</h1><h2 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h2><ul><li>功能<ul><li>按下鍵盤，出現相對應的聲音</li></ul></li><li>畫面<ul><li>按下鍵盤，畫面上的字母方塊，做點小動畫<ul><li>加上黃色陰影</li><li>按鈕彈一下(微小放大)的動畫</li></ul></li></ul></li></ul><br><hr><br><h3 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index-START.html"></a>index-START.html</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">  &lt;title&gt;JS Drum Kit&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">  &lt;link rel="stylesheet" href="style.css"&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"keys"</span>&gt;</span><br><span class="line">    &lt;div data-key=<span class="string">"65"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"key"</span>&gt;</span><br><span class="line">      &lt;kbd&gt;A&lt;<span class="regexp">/kbd&gt;</span></span><br><span class="line"><span class="regexp">      &lt;span class="sound"&gt;clap&lt;/</span>span&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div data-key="83" class="key"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;kbd&gt;S&lt;/</span>kbd&gt;</span><br><span class="line">      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"sound"</span>&gt;hihat&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    &lt;div data-key=<span class="string">"68"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"key"</span>&gt;</span><br><span class="line">      &lt;kbd&gt;D&lt;<span class="regexp">/kbd&gt;</span></span><br><span class="line"><span class="regexp">      &lt;span class="sound"&gt;kick&lt;/</span>span&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div data-key="70" class="key"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;kbd&gt;F&lt;/</span>kbd&gt;</span><br><span class="line">      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"sound"</span>&gt;openhat&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    &lt;div data-key=<span class="string">"71"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"key"</span>&gt;</span><br><span class="line">      &lt;kbd&gt;G&lt;<span class="regexp">/kbd&gt;</span></span><br><span class="line"><span class="regexp">      &lt;span class="sound"&gt;boom&lt;/</span>span&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div data-key="72" class="key"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;kbd&gt;H&lt;/</span>kbd&gt;</span><br><span class="line">      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"sound"</span>&gt;ride&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    &lt;div data-key=<span class="string">"74"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"key"</span>&gt;</span><br><span class="line">      &lt;kbd&gt;J&lt;<span class="regexp">/kbd&gt;</span></span><br><span class="line"><span class="regexp">      &lt;span class="sound"&gt;snare&lt;/</span>span&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div data-key="75" class="key"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;kbd&gt;K&lt;/</span>kbd&gt;</span><br><span class="line">      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"sound"</span>&gt;tom&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    &lt;div data-key=<span class="string">"76"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"key"</span>&gt;</span><br><span class="line">      &lt;kbd&gt;L&lt;<span class="regexp">/kbd&gt;</span></span><br><span class="line"><span class="regexp">      &lt;span class="sound"&gt;tink&lt;/</span>span&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;audio data-key=<span class="string">"65"</span> src=<span class="string">"sounds/clap.wav"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line">  &lt;audio data-key=<span class="string">"83"</span> src=<span class="string">"sounds/hihat.wav"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line">  &lt;audio data-key=<span class="string">"68"</span> src=<span class="string">"sounds/kick.wav"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line">  &lt;audio data-key=<span class="string">"70"</span> src=<span class="string">"sounds/openhat.wav"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line">  &lt;audio data-key=<span class="string">"71"</span> src=<span class="string">"sounds/boom.wav"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line">  &lt;audio data-key=<span class="string">"72"</span> src=<span class="string">"sounds/ride.wav"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line">  &lt;audio data-key=<span class="string">"74"</span> src=<span class="string">"sounds/snare.wav"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line">  &lt;audio data-key=<span class="string">"75"</span> src=<span class="string">"sounds/tom.wav"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line">  &lt;audio data-key=<span class="string">"76"</span> src=<span class="string">"sounds/tink.wav"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><br><h3 id="style-css"><a href="#style-css" class="headerlink" title="style.css"></a>style.css</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(http://i.imgur.com/b9r5sEL.jpg) bottom center;</span><br><span class="line">  <span class="attribute">background-size</span>: cover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span>,</span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.keys</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.key</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0.4rem</span> solid black;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">0.5rem</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.5rem</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1rem</span> <span class="number">0.5rem</span>;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.07s</span> ease;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10rem</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(0, 0, 0, 0.4);</span><br><span class="line">  <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0.5rem</span> black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.playing</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(1.1);</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#ffc600</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">1rem</span> <span class="number">#ffc600</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">kbd</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">4rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sound</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.2rem</span>;</span><br><span class="line">  <span class="attribute">text-transform</span>: uppercase;</span><br><span class="line">  <span class="attribute">letter-spacing</span>: <span class="number">0.1rem</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffc600</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><blockquote><p>音檔連結：<a href="https://reurl.cc/72y3N5" target="_blank" rel="noopener">https://reurl.cc/72y3N5</a></p></blockquote><br><h3 id="index-FINISHED-html"><a href="#index-FINISHED-html" class="headerlink" title="index-FINISHED.html"></a>index-FINISHED.html</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">  &lt;title&gt;JS Drum Kit&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">  &lt;link rel="stylesheet" href="style.css"&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"keys"</span>&gt;</span><br><span class="line">    &lt;div data-key=<span class="string">"65"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"key"</span>&gt;</span><br><span class="line">      &lt;kbd&gt;A&lt;<span class="regexp">/kbd&gt;</span></span><br><span class="line"><span class="regexp">      &lt;span class="sound"&gt;clap&lt;/</span>span&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div data-key="83" class="key"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;kbd&gt;S&lt;/</span>kbd&gt;</span><br><span class="line">      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"sound"</span>&gt;hihat&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    &lt;div data-key=<span class="string">"68"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"key"</span>&gt;</span><br><span class="line">      &lt;kbd&gt;D&lt;<span class="regexp">/kbd&gt;</span></span><br><span class="line"><span class="regexp">      &lt;span class="sound"&gt;kick&lt;/</span>span&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div data-key="70" class="key"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;kbd&gt;F&lt;/</span>kbd&gt;</span><br><span class="line">      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"sound"</span>&gt;openhat&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    &lt;div data-key=<span class="string">"71"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"key"</span>&gt;</span><br><span class="line">      &lt;kbd&gt;G&lt;<span class="regexp">/kbd&gt;</span></span><br><span class="line"><span class="regexp">      &lt;span class="sound"&gt;boom&lt;/</span>span&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div data-key="72" class="key"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;kbd&gt;H&lt;/</span>kbd&gt;</span><br><span class="line">      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"sound"</span>&gt;ride&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    &lt;div data-key=<span class="string">"74"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"key"</span>&gt;</span><br><span class="line">      &lt;kbd&gt;J&lt;<span class="regexp">/kbd&gt;</span></span><br><span class="line"><span class="regexp">      &lt;span class="sound"&gt;snare&lt;/</span>span&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div data-key="75" class="key"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;kbd&gt;K&lt;/</span>kbd&gt;</span><br><span class="line">      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"sound"</span>&gt;tom&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    &lt;div data-key=<span class="string">"76"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"key"</span>&gt;</span><br><span class="line">      &lt;kbd&gt;L&lt;<span class="regexp">/kbd&gt;</span></span><br><span class="line"><span class="regexp">      &lt;span class="sound"&gt;tink&lt;/</span>span&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;audio data-key=<span class="string">"65"</span> src=<span class="string">"sounds/clap.wav"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line">  &lt;audio data-key=<span class="string">"83"</span> src=<span class="string">"sounds/hihat.wav"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line">  &lt;audio data-key=<span class="string">"68"</span> src=<span class="string">"sounds/kick.wav"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line">  &lt;audio data-key=<span class="string">"70"</span> src=<span class="string">"sounds/openhat.wav"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line">  &lt;audio data-key=<span class="string">"71"</span> src=<span class="string">"sounds/boom.wav"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line">  &lt;audio data-key=<span class="string">"72"</span> src=<span class="string">"sounds/ride.wav"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line">  &lt;audio data-key=<span class="string">"74"</span> src=<span class="string">"sounds/snare.wav"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line">  &lt;audio data-key=<span class="string">"75"</span> src=<span class="string">"sounds/tom.wav"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line">  &lt;audio data-key=<span class="string">"76"</span> src=<span class="string">"sounds/tink.wav"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">removeTransition</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (e.propertyName !== <span class="string">'transform'</span>) <span class="keyword">return</span>;</span><br><span class="line">    e.target.classList.remove(<span class="string">'playing'</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">playSound</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> audio = <span class="built_in">document</span>.querySelector(<span class="string">`audio[data-key="<span class="subst">$&#123;e.keyCode&#125;</span>"]`</span>);</span><br><span class="line">    <span class="keyword">const</span> key = <span class="built_in">document</span>.querySelector(<span class="string">`div[data-key="<span class="subst">$&#123;e.keyCode&#125;</span>"]`</span>);</span><br><span class="line">    <span class="keyword">if</span> (!audio) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    key.classList.add(<span class="string">'playing'</span>);</span><br><span class="line">    audio.currentTime = <span class="number">0</span>;</span><br><span class="line">    audio.play();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> keys = <span class="built_in">Array</span>.from(<span class="built_in">document</span>.querySelectorAll(<span class="string">'.key'</span>));</span><br><span class="line">  keys.forEach(<span class="function"><span class="params">key</span> =&gt;</span> key.addEventListener(<span class="string">'transitionend'</span>, removeTransition));</span><br><span class="line">  <span class="built_in">window</span>.addEventListener(<span class="string">'keydown'</span>, playSound);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><br><hr><br><h2 id="學習筆記"><a href="#學習筆記" class="headerlink" title="學習筆記"></a>學習筆記</h2><br><h4 id="★-data-attribute"><a href="#★-data-attribute" class="headerlink" title="★ data-attribute"></a>★ data-attribute</h4><p>data-attribute 可以讓我們在 HTML 元素上嵌入自定義的屬性。</p><ul><li>屬性名稱不得包含任何大寫字母，並且前綴 “data-“ 後必須至少有一個字母</li><li>屬性值可以是任何字串</li></ul><p>＊注意：前綴為”data-“的自定義屬性會被 User-Agent 完全忽略。</p><p>範例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"block"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"num01"</span> <span class="attr">data-number</span>=<span class="string">"no1"</span> <span class="attr">onclick</span>=<span class="string">"showMore(this)"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"num02"</span> <span class="attr">data-number</span>=<span class="string">"no2"</span> <span class="attr">onclick</span>=<span class="string">"showMore(this)"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// 點擊後會跳出 data-attribute 的值</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">showMore</span>(<span class="params">number</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> num = number.getAttribute(<span class="string">"data-number"</span>);</span></span><br><span class="line"><span class="javascript">    alert(<span class="string">"I'm"</span> + num + <span class="string">"."</span>);</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h4 id="★-lt-kbd-gt-標籤"><a href="#★-lt-kbd-gt-標籤" class="headerlink" title="★ &lt; kbd &gt; 標籤"></a>★ &lt; kbd &gt; 標籤</h4><p>&lt; kbd &gt; 標籤表示內容是使用者從鍵盤上輸入的，通常以等寬字體呈現。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>請輸入<span class="tag">&lt;<span class="name">kbd</span>&gt;</span>ww<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span>來表達開心。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h4 id="★-Arrow-function"><a href="#★-Arrow-function" class="headerlink" title="★ Arrow function"></a>★ Arrow function</h4><p>lambda 在 JavaScript 裡叫做 Arrow function（箭頭函式）。</p><ul><li>一般 js 的匿名函式這樣寫：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">funtion (key) &#123;</span><br><span class="line">  key.addEventListener(<span class="string">'transitionend'</span>, removeTransition);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>用<code>arrow function</code>的寫法是：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key =&gt; key.addEventListener(<span class="string">"transitionend"</span>, removeTransition);</span><br></pre></td></tr></table></figure><p>＊不同之處在於<code>this</code>，一般的寫法有<code>this</code>=<code>function</code>本身，但是「誰」呼叫<code>arrow function</code>，「誰」=<code>this</code>。</p><br><h4 id="★-keycode"><a href="#★-keycode" class="headerlink" title="★ keycode"></a>★ keycode</h4><p>keyCode 属性返回 onkeypress 事件觸發的 key 的值的字串，或 onkeydown 或 onkeyup 事件的 key 的代碼。</p><p>兩種代碼類型的區別：</p><ul><li>字串代碼：表示 ASCII 字符的數字</li><li>鍵盤代碼 ： 表示鍵盤上實際輸入的數字</li></ul><p>＊注意：which 和 keyCode 屬性解決瀏覽器兼容性的問題，但最新版本的 DOM 事件推薦使用 key 屬性。 which 和 keyCode 屬性不能用於 onkeypress 的非打印事件，功能鍵 (如 CAPS LOCK, CTRL, ESC, F12, 等)。</p><p>範例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">  <span class="attr">type</span>=<span class="string">"text"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">size</span>=<span class="string">"50"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">onkeypress</span>=<span class="string">"uniCharCode(event)"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">onkeydown</span>=<span class="string">"uniKeyCode(event)"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>onkeypress - <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>onkeydown - <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"demo2"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">uniCharCode</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> char = event.which || event.keyCode; <span class="comment">// 使用 which 或 keyCode, 以支援不同瀏覽器</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).innerHTML = <span class="string">" Unicode 字符代碼為: "</span> + char;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">uniKeyCode</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> key = event.keyCode;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">"demo2"</span>).innerHTML = <span class="string">" Unicode 鍵代碼為: "</span> + key;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h4 id="★-Audio-播放方法"><a href="#★-Audio-播放方法" class="headerlink" title="★ Audio 播放方法"></a>★ Audio 播放方法</h4><p><code>play()</code> 方法播放音檔。</p><p><code>pause()</code> 方法停止播放音檔。</p><p>範例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="built_in">document</span>.getElementById(<span class="string">"myAudio"</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">playAudio</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  x.play();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pauseAudio</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  x.pause();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h4 id="★-setTimeout"><a href="#★-setTimeout" class="headerlink" title="★ setTimeout()"></a>★ setTimeout()</h4><p><code>setTimeout()</code> 方法用於在指定的毫秒數後調用函式或計算表達式。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var timeoutID = scope.setTimeout(function[, delay, param1, param2, ...]);</span><br><span class="line">var timeoutID = scope.setTimeout(function[, delay]);</span><br><span class="line"><span class="keyword">var</span> timeoutID = scope.setTimeout(code[, delay]);</span><br></pre></td></tr></table></figure><p>＊注意：<code>setTimeout()</code> 只會執行一次就結束，而 <code>setInterval()</code> 則是會在間隔固定的時間不斷重複。返回值 <code>timeoutID</code>是一個正整數，表示定時器的編號。這個值可以傳遞給 <code>clearTimeout()</code> 來取消該定時器。</p><p>範例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> timeoutID;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delayedAlert</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  timeoutID = <span class="built_in">window</span>.setTimeout(slowAlert, <span class="number">2000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">slowAlert</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  alert(<span class="string">"That was really slow!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clearAlert</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">window</span>.clearTimeout(timeoutID);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h4 id="★-currentTime"><a href="#★-currentTime" class="headerlink" title="★ currentTime"></a>★ currentTime</h4><p>currentTime 屬性設置或返回影音檔播放的當前位置（以秒計）。當設置該屬性時，播放會跳躍到指定的位置。</p><p>範例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;audio id=<span class="string">"myAudio"</span> controls&gt;</span><br><span class="line">    &lt;source src=<span class="string">"影音檔.mp3"</span> type=<span class="string">"audio/mpeg"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/audio&gt;</span></span><br><span class="line"><span class="regexp">&lt;button onclick="getCurTime()" type="button"&gt;取得當前時間&lt;/</span>button&gt;</span><br><span class="line">&lt;button onclick=<span class="string">"setCurTime()"</span> type=<span class="string">"button"</span>&gt;設置時間為 <span class="number">1</span> 秒 &lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">var x = document.getElementById("myAudio");</span></span><br><span class="line"><span class="regexp">function getCurTime()&#123;</span></span><br><span class="line"><span class="regexp">alert(x.currentTime);</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">function setCurTime()&#123;</span></span><br><span class="line"><span class="regexp">x.currentTime = 1;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JS30 Day01&lt;br&gt;第一天就學到了很多語法與實際應用，是個收穫非常豐富的開始！:D&lt;/p&gt;
    
    </summary>
    
    
      <category term="JS30" scheme="https://chaichai.site/categories/JS30/"/>
    
    
      <category term="程式筆記" scheme="https://chaichai.site/tags/%E7%A8%8B%E5%BC%8F%E7%AD%86%E8%A8%98/"/>
    
      <category term="Javascript" scheme="https://chaichai.site/tags/Javascript/"/>
    
      <category term="JS30" scheme="https://chaichai.site/tags/JS30/"/>
    
  </entry>
  
  <entry>
    <title>Rails ORM</title>
    <link href="https://chaichai.site/2019/10/31/rails_orm/"/>
    <id>https://chaichai.site/2019/10/31/rails_orm/</id>
    <published>2019-10-30T16:00:00.000Z</published>
    <updated>2019-10-31T13:20:41.683Z</updated>
    
    <content type="html"><![CDATA[<p>ORM 之 CRUD / Scope / Validates / Callback</p><a id="more"></a><hr><br><ul><li><p>ORM = Object Relational Mapping</p></li><li><p>Active Record ＝ 把資料做成物件<br>Active Record 是一種 ORM 框架<br>物件 = 欄位 + 基本操作 + 商業邏輯</p></li><li><p>Model = 依照 Active Record 模式設計的產物<br>可以翻譯成宅宅語言的：<br>Model = Active_record.new</p><br></li></ul><hr><h1 id="ORM-CRUD"><a href="#ORM-CRUD" class="headerlink" title="ORM CRUD"></a>ORM CRUD</h1><br><h2 id="Create"><a href="#Create" class="headerlink" title="Create"></a>Create</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">book = Product.new(<span class="symbol">name:</span> <span class="string">'Ruby book'</span>, <span class="symbol">price:</span> <span class="number">350</span>)</span><br><span class="line">book.save <span class="comment"># 到這⼀步才存到資料庫裡</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立並同時存到 products 表格裡:</span></span><br><span class="line">Product.create(<span class="symbol">name:</span> <span class="string">'Ruby book'</span>, <span class="symbol">price:</span><span class="number">350</span>)</span><br></pre></td></tr></table></figure><ul><li>new 方法會建立一筆資料，但還不會存到資料庫裡。</li><li>create 失敗會 rollback ，可以用 if 判斷</li><li>create! 失敗會 error，需要用 begin rescue 抓例外</li></ul><br><h2 id="Read"><a href="#Read" class="headerlink" title="Read"></a>Read</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Product.first</span><br><span class="line">Product.last</span><br><span class="line">Product.find(<span class="number">1</span>) <span class="comment"># 只能用 id 找，找不到會例外</span></span><br><span class="line">Product.find_by(<span class="symbol">id:</span> <span class="number">1</span>) <span class="comment"># 能用 name 等其他東西找，找不到會 nil</span></span><br><span class="line">Product.find_by_sql(<span class="string">"select \* from products where id = 1"</span>)</span><br><span class="line">Product.find_each <span class="keyword">do</span> <span class="params">| product |</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 預設抓 1000 筆</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">Owner.find_by_name_and_email_and_id <span class="comment"># 還有這種神奇的寫法，但效能較差</span></span><br><span class="line">Owner.find_by(<span class="symbol">name:</span><span class="string">'kk'</span>, <span class="symbol">email:</span><span class="string">'ddd'</span>) <span class="comment"># 效能比較好</span></span><br></pre></td></tr></table></figure><ul><li>還有許多讀取方式</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Product.all <span class="comment"># 知道查什麼時就不用放 all (不需要每次都放)</span></span><br><span class="line">Product.select(<span class="string">'name'</span>)</span><br><span class="line">Product.where(<span class="symbol">name:</span> <span class="string">'Ruby'</span>) <span class="comment"># 找到全部 name 的陣列</span></span><br><span class="line">Product.find_by(<span class="symbol">name:</span> <span class="string">'Ruby'</span>) <span class="comment"># 只會找到一筆</span></span><br><span class="line">Product.order(<span class="string">'id DESC'</span>)</span><br><span class="line">Product.order(<span class="symbol">id:</span> <span class="symbol">:desc</span>)</span><br><span class="line">Product.limit(<span class="number">5</span>)</span><br><span class="line">Owner.select(<span class="symbol">:name</span>).where(<span class="symbol">name:</span><span class="string">'o1'</span>) <span class="comment"># 可以用組合技，省記憶體空間</span></span><br><span class="line">Product.where(<span class="string">'price &lt; 10'</span>) <span class="comment"># 查詢大於小於只能用字串</span></span><br><span class="line">Owner.where(<span class="symbol">name:</span><span class="string">'ruby'</span>).first</span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接 limit 1 筆，較省記憶體空間</span></span><br><span class="line"></span><br><span class="line">all = Owner.where(<span class="symbol">name:</span><span class="string">'ruby'</span>)</span><br><span class="line">all.first</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把全部資料都抓出來存到記憶體，再抓第一個，非常占空間</span></span><br></pre></td></tr></table></figure><ul><li>好用的方法們（不要傻傻的用 ORM 抓出來轉迴圈再來計算）<ul><li>count</li><li>average</li><li>sum</li><li>maximum 與 minimum</li></ul></li></ul><br><h2 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">p1 = Product.find_by(<span class="symbol">id:</span> <span class="number">1</span>) <span class="comment"># 儲存</span></span><br><span class="line">p1.name = <span class="string">'Ruby book'</span> p1.save <span class="comment"># 更新</span></span><br><span class="line">p1.update(<span class="symbol">name:</span> <span class="string">'Ruby book'</span>)</span><br><span class="line">p1.update_attributes(<span class="symbol">name:</span> <span class="string">'Ruby book'</span>) <span class="comment"># update 兩者相同，這行可以不用（太長）</span></span><br><span class="line"></span><br><span class="line">Product.update_all(<span class="symbol">name:</span> <span class="string">'Ruby book'</span>, <span class="symbol">price:</span> <span class="number">250</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 全部更新(請⼩心使⽤!)</span></span><br></pre></td></tr></table></figure><ul><li>其他方法</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># increment / decrement 不會自己 save 但 increment! 會直接存</span></span><br><span class="line"></span><br><span class="line">my_order = Order.first</span><br><span class="line">my_order.increment(<span class="symbol">:quantity</span>) <span class="comment"># quantity 欄位的值 + 1</span></span><br><span class="line">my_order.toggle(<span class="symbol">:is_online</span>) <span class="comment"># 把原本的 true/false 值對調</span></span><br></pre></td></tr></table></figure><br><h2 id="Delete"><a href="#Delete" class="headerlink" title="Delete"></a>Delete</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">p1 = Product.find_by(<span class="symbol">id:</span> <span class="number">1</span>)</span><br><span class="line">p1.destroy <span class="comment"># 會走 callback 流程，過程可以做檢查</span></span><br><span class="line">p1.delete <span class="comment"># 直接刪除</span></span><br><span class="line">Product.delete(<span class="number">1</span>) <span class="comment"># 刪除編號 1 號的商品</span></span><br><span class="line">Product.destroy_all(<span class="string">"price &lt; 10"</span>) <span class="comment"># 刪除所有低於 10 元的商品</span></span><br></pre></td></tr></table></figure><br><hr><h1 id="ORM-其他"><a href="#ORM-其他" class="headerlink" title="ORM 其他"></a>ORM 其他</h1><br><h2 id="Scope"><a href="#Scope" class="headerlink" title="Scope"></a>Scope</h2><ul><li>把一群條件整理成一個</li><li>Scope 簡化使用時的邏輯</li><li>減少在 Controller 裡寫一堆 Where 組合</li><li>用起來跟類別方法一樣</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># model 檔</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Product</span> &lt; ApplicationRecord</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">cheap</span></span></span><br><span class="line">where(<span class="string">'price &lt; 10'</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 上下兩者相同</span></span><br><span class="line"></span><br><span class="line">scope <span class="symbol">:cheap</span>, -&gt;&#123;where(<span class="string">'price &lt; 15'</span>)&#125;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 同名方法的話後面會蓋掉前面 結果為 price &lt; 15</span></span><br></pre></td></tr></table></figure><ul><li>default_scope 可幫所有的查詢預設套用</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Product</span> &lt; ApplicationRecord</span></span><br><span class="line">  default_scope &#123; order(<span class="string">'id DESC'</span>) &#125;</span><br><span class="line">  scope <span class="symbol">:available</span>, -&gt; &#123; where(<span class="symbol">is_available:</span> <span class="literal">true</span>) &#125;</span><br><span class="line">  default_scope &#123; where(<span class="symbol">deleted:</span> <span class="literal">false</span>) &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 應用場景：假刪除/軟刪除 讓被刪除資料不顯示</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><blockquote><p>Q: scope 跟類別方法有什麼不一樣?<br>A: 一樣<br>Q: 什麼時候該用什麼寫法?<br>A: 只有一行時寫 scope，多行就寫類別方法</p></blockquote><br><h2 id="Validates"><a href="#Validates" class="headerlink" title="Validates"></a>Validates</h2><ul><li>方法們：<ul><li>presence</li><li>format</li><li>uniqueness</li><li>numericality</li><li>length</li><li>condition</li></ul></li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自訂驗證</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Product</span> &lt; ApplicationRecord</span></span><br><span class="line">  validate <span class="symbol">:name_validator</span></span><br><span class="line">  </span><br><span class="line">  private</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name_validator</span></span></span><br><span class="line">      <span class="keyword">unless</span> name.starts_with? <span class="string">'Ruby'</span></span><br><span class="line">        errors[<span class="symbol">:name</span>] &lt;&lt; <span class="string">'must begin with Ruby'</span> </span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BeginWithRubyValidator</span> &lt; ActiveModel::EachValidator</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">validate_each</span><span class="params">(record, attribute, value)</span></span></span><br><span class="line">    <span class="keyword">unless</span> value.starts_with? <span class="string">'Ruby'</span></span><br><span class="line">      record.errors[attribute] &lt;&lt; <span class="string">'must begin with Ruby'</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Product</span> &lt; ApplicationRecord</span></span><br><span class="line">  validates <span class="symbol">:name</span>, <span class="symbol">presence:</span> <span class="literal">true</span>, <span class="symbol">begin_with_ruby:</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><ul><li>自訂驗證寫在 lib 裡更好</li><li>資料驗證過程：<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">p1 = Product.new <span class="comment"># 忘了寫產品名稱，但還沒寫入資料庫</span></span><br><span class="line"></span><br><span class="line">p1.errors.any? <span class="comment"># 看看有沒錯誤...</span></span><br><span class="line">=&gt; false <span class="comment"># 這時候還沒發⽣生錯誤</span></span><br><span class="line"></span><br><span class="line">p1.validate <span class="comment"># 開始進⾏行行驗證(還不需要存檔喔)</span></span><br><span class="line">=&gt; false <span class="comment"># 得到 false 表⽰示沒有驗證成功</span></span><br><span class="line"></span><br><span class="line">p1.errors.any? <span class="comment"># 看看有沒有錯誤...</span></span><br><span class="line">=&gt; true <span class="comment"># 這時候就有錯誤內容了了</span></span><br><span class="line"></span><br><span class="line">p1.errors.full_messages</span><br><span class="line">=&gt; [<span class="string">"Title can't be blank"</span>] <span class="comment"># 使⽤ full_messages 可把資料印出來</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>Q: 硬是要繞過驗證可以嗎?<br>A: 可以，繞過驗證的方式如下（但不要這麼做啦）<br>cc.save(validates: false)<br>Q: 只要有驗證就可以保證資料正確嗎?<br>A: 不，驗證是綁在 model ，另一個系統若直接寫進資料表就不行</p></blockquote><br><h2 id="Callback"><a href="#Callback" class="headerlink" title="Callback"></a>Callback</h2><ul><li><p>資料存檔的流程會經過以下流程，可在這些流程執行的時候對資料做一些事情</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">save &gt; valid &gt; before_validation &gt; validate &gt; after_validate &gt; before_save &gt; before_create &gt; create &gt; after_create &gt; after_save &gt; after_commit</span><br></pre></td></tr></table></figure></li><li><p>在資料存檔前對密碼加密</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> &lt; ApplicationRecord</span></span><br><span class="line">  before_save <span class="symbol">:encrypt_email</span></span><br><span class="line">  private</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">encrypt_email</span></span></span><br><span class="line">    <span class="keyword">require</span> <span class="string">'digest'</span></span><br><span class="line">    <span class="keyword">self</span>.email = Digest::MD5.hexdigest(email)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>Q: 在範例中，如果改用 before_save 會造成什麼問題?<br>A: 應該用 before_create ，加密只應該在建立時做，不應該每次更新都做<br>Q: before_save 跟 before_create 有什麼差別?<br>A: before_save 在新增 / 存檔時都會做，before_create 只有在新增時做</p></blockquote><br>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ORM 之 CRUD / Scope / Validates / Callback&lt;/p&gt;
    
    </summary>
    
    
      <category term="程式筆記" scheme="https://chaichai.site/categories/%E7%A8%8B%E5%BC%8F%E7%AD%86%E8%A8%98/"/>
    
    
      <category term="Ruby" scheme="https://chaichai.site/tags/Ruby/"/>
    
      <category term="Rails" scheme="https://chaichai.site/tags/Rails/"/>
    
      <category term="程式筆記" scheme="https://chaichai.site/tags/%E7%A8%8B%E5%BC%8F%E7%AD%86%E8%A8%98/"/>
    
  </entry>
  
  <entry>
    <title>RESTful API</title>
    <link href="https://chaichai.site/2019/10/27/restful_api/"/>
    <id>https://chaichai.site/2019/10/27/restful_api/</id>
    <published>2019-10-26T16:00:00.000Z</published>
    <updated>2019-11-01T04:59:42.163Z</updated>
    
    <content type="html"><![CDATA[<p>為了理解目前 API 設計的主流，試著整理了網路上的解說文章，作為學習筆記。</p><a id="more"></a><hr><h2 id="何謂-RESTful"><a href="#何謂-RESTful" class="headerlink" title="何謂 RESTful?"></a>何謂 RESTful?</h2><p>簡單來說，就是把每個網址當做資源（Resource）來看待，對同一個資源做不同的動作（HTTP Verb）會得到不同的結果。<br>符合 REST 概念設計的網址，又稱之 RESTful Route。</p><br><ul><li><p>REST 全名</p><ul><li>Resource : 資源</li><li>Representational : JSON, XML, YAML..</li><li>State Transfer : 狀態傳輸，透過 HTTP 動詞實現</li></ul></li></ul><ul><li><p>API 範例</p><ul><li>非 RESTful 的 API 可能長這樣：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/api/get_file/ ( 得到檔案 )</span><br><span class="line">/api/upload_file/ ( 新增檔案 )</span><br><span class="line">/api/update_file/ ( 更新檔案 )</span><br><span class="line">/api/delete_file/ ( 刪除檔案 )</span><br></pre></td></tr></table></figure><ul><li>RESTful API ：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/api/files/ ( GET -&gt; 得到檔案 )</span><br><span class="line">/api/files/ ( POST -&gt; 新增檔案 )</span><br><span class="line">/api/files/ ( PUT -&gt; 更新檔案)</span><br><span class="line">/api/files/ ( DELETE -&gt; 刪除檔案 )</span><br></pre></td></tr></table></figure></li></ul><br><h3 id="RESTful-Triangle"><a href="#RESTful-Triangle" class="headerlink" title="RESTful Triangle"></a>RESTful Triangle</h3><p><img src="https://image.slidesharecdn.com/asitrest-150317020843-conversion-gate01/95/learn-rest-api-at-asit-6-638.jpg?cb=1426576159" alt="相關圖片"></p><ol><li>Nouns 名詞：定義網址的 URL，每個資源僅有一個唯一的識別位置，就像家的住址。</li><li>Verbs 動詞：描述了對 Nouns 名詞 (資源 URL) 的操作動作，在 HTTP 1.1 的實作就是 HTTP Method。</li><li>Content Types 資源呈現方式：比如取得某一個 URL 文章的 HTML 格式、或者 XML 格式，同樣的 URL 資源可以有不同型態的表現方式。</li></ol><p>建議在設計 API 規格時，同時思考上述的設計原則，好讓 API 設計更接近 REST 精神。</p><br><hr><br><h2 id="RESTful-API-設計要點"><a href="#RESTful-API-設計要點" class="headerlink" title="RESTful API 設計要點"></a>RESTful API 設計要點</h2><br><h3 id="HTTP-動詞"><a href="#HTTP-動詞" class="headerlink" title="HTTP 動詞"></a>HTTP 動詞</h3><p>在<em>HTTP*通訊協定中制定了九種動詞</em>(Verbs)<em>來跟伺服器溝通，分別是</em>HEAD*、_GET_、_POST_、_PUT_、_PATCH_、_DELETE_、_TRACE_、_OPTIONS_、_CONNECT_。</p><ul><li>常用的 HTTP method：</li></ul><table><thead><tr><th align="left">HTTP</th><th>Method Idempotent</th><th>Safe</th></tr></thead><tbody><tr><td align="left">GET（讀取資源）</td><td>yes</td><td>yes</td></tr><tr><td align="left">HEAD（類似 GET，但只回傳 HTTP header）</td><td>yes</td><td>yes</td></tr><tr><td align="left">PUT （替換資源）</td><td>yes</td><td>no</td></tr><tr><td align="left">POST（新增資源）</td><td>no</td><td>no</td></tr><tr><td align="left">DELETE（刪除資源）</td><td>yes</td><td>no</td></tr><tr><td align="left">PATCH（更新資源部份內容）</td><td>no</td><td>no</td></tr></tbody></table><ul><li><p>Safe / Idempotent</p><ul><li><p>「safe」是指該操作不會改變伺服器端的資源狀態（而且結果可以被 cache）</p></li><li><p>「idempotent」是指該操作不管做 1 遍或做 n 遍，都會得到同樣的資源狀態結果（但不一定得到同樣的回傳值，例如第 2 次 DELETE 請求可能回傳 404），因此 client 端可以放心 retry。</p></li></ul></li></ul><ul><li><p>PUT、POST 和 PATCH 容易混淆，補充說明如下：</p><ol><li><strong>PUT</strong>通常是用來替換單一資源或資源集合 (resource collection) 的內容。</li><li><strong>POST</strong>除了用來新增資源，也作為 catch-all 用途，例如用在 utility API。（Utility API 是不同於一般資源讀寫操作的要求類型，例如檢查某個促銷活動碼是否有效。）</li><li><strong>PATCH</strong>用來更新資源部份內容。前幾年有人會用 POST 代替 PATCH，現在應該沒這必要了；建議除非 infrastructure 有限制，否則直接用 PATCH 即可。</li></ol></li></ul><br><h3 id="URI-名詞"><a href="#URI-名詞" class="headerlink" title="URI 名詞"></a>URI 名詞</h3><p>相對於 HTTP 動詞，URI 就是名詞了。URI 由 prefix + API endpoint 組成。Prefix 的部份可有可無，例如<code>/api</code>或<code>/api/v1</code>。API endpoint 的設計，幾個重要原則如下：</p><ul><li>一般資源用複數名詞，例如 <code>/books</code> 或 <code>/books/123</code><ul><li>有些人認為用單數比較好，因為<code>/book/123</code>看似比<code>/books/123</code>合理；但想想檔案系統的目錄命名（例如<code>/Users</code>或<code>/Documents</code>），其實用複數也沒問題。複數可以保持 API endpoint 的一致性，所以一般資源建議用複數。</li></ul></li><li>唯一資源（亦即對 client 而言只有一份的資源）用<strong>單數名詞</strong>。例如<a href="https://developer.github.com/v3/activity/watching/#list-repositories-being-watched" target="_blank" rel="noopener">GitHub watching API</a>中的<code>GET /user/subscriptions</code>，其中<code>user</code>是指目前驗證的使用者，所以用單數。</li><li>資源的層級架構，可以適當反應在 API endpoint 設計上，例如<code>/books/123/chapters/2</code>。</li><li>Utility API 與 resource API 性質不同，它的 endpoint 設計只要合理即可，例如<code>/search?q={keywords}</code>。</li><li>建議 URI components 都用<strong>小寫</strong>，兩個字之間用減號<code>-</code>或底線<code>_</code>隔開皆可，但應保持一致。（我個人偏好用<code>-</code>）</li></ul><br><h3 id="HTTP-回傳狀態碼"><a href="#HTTP-回傳狀態碼" class="headerlink" title="HTTP 回傳狀態碼"></a>HTTP 回傳狀態碼</h3><p>API 回傳的結果，應使用適當的 HTTP 狀態碼，所以 API 設計者必須了解它們。以下是一些常用的狀態碼，完整列表請參考<a href="https://en.wikipedia.org/wiki/List_of_HTTP_status_codes" target="_blank" rel="noopener">Wikipedia</a>。</p><ul><li><p>2xx: 成功</p><ul><li>200 OK: 通用狀態碼</li><li>201 Created: 資源新增成功</li><li>202 Accepted: 請求已接受，但尚在處理中</li><li>204 No Content: 請求成功，但未回傳任何內容</li></ul></li><li><p>3xx: 重新導向</p><ul><li>301 Moved Permanently: 資源已移至它處</li><li>303 See Other: 回傳的內容可在它處取得（例如在用戶端發送了一個 POST 請求之後）</li><li>304 Not Modified: 請求的資源並未修改（通常是用戶端發送了帶有 If-Modified-Since 或 If-None-Match 表頭的請求）</li></ul></li><li><p>4xx: 用戶端錯誤</p><p>（用戶端不應 retry 原始請求）</p><ul><li>400 Bad Request: 通用狀態碼</li><li>401 Unauthorized: 用戶端尚未驗證*</li><li>403 Forbidden: 用戶端被禁止此請求*</li><li>404 Not Found: 請求的資源不存在</li><li>405 Method Not Allowed: 不支援請求的 HTTP 方法</li><li>406 Not Acceptable: 不支援請求所<strong>要求</strong>的內容類型*（Accept 表頭）</li><li>415 Unsupported Media Type: 不支援請求所<strong>用</strong>的內容類型*（Content-Type 表頭）</li></ul></li><li><p>5xx: 伺服器錯誤</p><p>（用戶端可合理 retry）</p><ul><li>500 Internal Server Error: 工程師要找 bug 了</li><li>501 Not Implemented: 用戶端的請求目前未支援（也就是將來有可能支援）</li><li>502 Bad Gateway: 上游的伺服器未回傳正確結果，一般是 gateway 或 proxy server 才會回傳此狀態碼</li><li>503 Service Unavailable: 暫停服務（也就是過不久就會恢復服務 ── 如果一切順利的話）</li><li>504 Gateway Timeout: 上游的伺服器逾時，一般是 gateway 或 proxy server 才會回傳此狀態碼</li></ul></li></ul><p>* 關於幾個容易混淆的狀態碼，補充說明如下：</p><ol><li>401、403: 401 是指用戶端尚未驗證，也就是 unauthenticated（HTTP spec 裡用 unauthorized 有些誤導）；403 是指用戶端目前的身份不被允許此項請求（通常是用戶端已驗證過了），或是所有使用者都不被允許此項請求。</li><li>406、415: 406 是指用戶端要求「回傳」的 Content-Type（也就是用戶端在 Accept 表頭裡所要求的），伺服器不支援；415 是指用戶端送出的「請求」，其 Content-Type（也就是用戶端 HTTP request body 的內容類型），伺服器不支援。</li></ol><p>另外要注意，這些回傳的狀態碼，是代表 API 這一層的執行狀態，而<strong>不是商業邏輯</strong>這一層的狀態。例如當<code>/search?q=xyz</code>搜尋結果是空的，API 結果仍應回傳 200，而非 404；因為從 API 角度來看，<code>/search</code>這個「資源」存在，而且 API 執行成功。</p><br><h3 id="HTTP-Header"><a href="#HTTP-Header" class="headerlink" title="HTTP Header"></a>HTTP Header</h3><p>用戶端送出 API 請求時，可能會帶一些 HTTP header，例如：</p><ul><li>Accept: 能夠接受的回應內容類型 (Content-Type)，屬於內容協商的一環</li><li>Authorization: 認證資訊</li></ul><p>至於 API 回傳結果的 HTTP header，沒甚麼特別之處，按照一般原則處理即可（例如 Content-Type、Content-Length、ETag、Cache-Control…）。</p><br><h3 id="HTTP-Body-JSON-或-XML-格式"><a href="#HTTP-Body-JSON-或-XML-格式" class="headerlink" title="HTTP Body: JSON 或 XML 格式"></a>HTTP Body: JSON 或 XML 格式</h3><p>現在 JSON 已被普遍支援，加上 JSON 處理上較簡潔，所以越來越多人採用 JSON 作為 API 的 HTTP body 格式。但要採用 JSON 或 XML（或同時支援兩種格式），仍應視專案的實際需求而定。</p><br><h3 id="其它原則"><a href="#其它原則" class="headerlink" title="其它原則"></a>其它原則</h3><ol><li>與 HTTP 一樣，API 應該是 stateless，也就是一項工作單元不應由二個或二個以上 API 組成。（這也引申出一個有趣的問題：REST API 如何支援 transaction？這個問題超出本篇文章的範圍，以後有機會再談。）</li><li>REST API 所呈現的資源，是從應用面及 client 角度來思考，並不需要和後端的資源儲存形式（例如資料庫 schema）維持一對一的關係。</li><li><a href="https://en.wikipedia.org/wiki/Representational_state_transfer#Uniform_interface" target="_blank" rel="noopener">HATEOAS</a> (Hypermedia as the engine of application state) 雖然是 REST 原始定義裡的一環，但我認為不一定需要。</li><li>Query parameter 的部份，只要風格保持一致即可，REST 對此並無特殊規範。</li></ol><br><hr><br><h2 id="RESTful-架構的實踐"><a href="#RESTful-架構的實踐" class="headerlink" title="RESTful 架構的實踐"></a>RESTful 架構的實踐</h2><br><h3 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h3><p>HTTP 1.1 本身就是 REST 架構的實踐，我們可以遵循它定義好的規格，例如：</p><ul><li>透過 HTTP Status Code 回傳 API 執行結果</li><li>利用 HTTP Accept Header 告知 Server 指定回傳的資料格式 Content-type，JSON 可以送出 application/json、XML 可以送出 application/xml 等等</li><li>透過 POST 新增資料到 Server，執行成功後回傳 201 Status Code 並且透過 Location Header 告知新資源的 URL</li></ul><br><h3 id="優缺點"><a href="#優缺點" class="headerlink" title="優缺點"></a>優缺點</h3><ul><li>優點：<ul><li>網址更直觀，不同開發人員都遵照慣例設計網址，易於維護、擴展。</li><li>REST 設計將每一個實體定義獨立唯一的 URL 位置，物件資源相互的依賴性降低，API 解耦特性更好，容易彈性組合應付多數業務邏輯。</li></ul></li><li>缺點<ul><li>安全性問題，假設使用者知道 <code>/member/1</code> 是自己的會員資料，他就可以嘗試從 <code>/member/100</code> 得到其他用戶的資料，須對使用者做身份驗證。</li><li>資源相依結構鬆散問題，假設想要取得文章與作者資訊，就必須先 <code>GET /文章/{ID}</code> ，然後再透過取回的文章物件中的 Author 欄位再一次呼叫 <code>GET /使用者/{NAME}</code> 取得作者資訊，較為麻煩。</li></ul></li></ul><br><hr><p>參考資料：</p><p><a href="https://railsbook.tw/chapters/11-routes.html#restful-routes" target="_blank" rel="noopener">https://railsbook.tw/chapters/11-routes.html#restful-routes</a></p><p><a href="https://ihower.tw/rails/restful.html" target="_blank" rel="noopener">https://ihower.tw/rails/restful.html</a></p><p><a href="https://tw.twincl.com/programming/*641y" target="_blank" rel="noopener">https://tw.twincl.com/programming/*641y</a></p><p><a href="https://github.com/twtrubiks/django-rest-framework-tutorial/tree/master/RESTful-API-Tutorial" target="_blank" rel="noopener">https://github.com/twtrubiks/django-rest-framework-tutorial/tree/master/RESTful-API-Tutorial</a></p><p><a href="https://www.webguide.nat.gov.tw/News_Content.aspx?n=531&amp;s=2918" target="_blank" rel="noopener">https://www.webguide.nat.gov.tw/News_Content.aspx?n=531&amp;s=2918</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;為了理解目前 API 設計的主流，試著整理了網路上的解說文章，作為學習筆記。&lt;/p&gt;
    
    </summary>
    
    
      <category term="學習日誌" scheme="https://chaichai.site/categories/%E5%AD%B8%E7%BF%92%E6%97%A5%E8%AA%8C/"/>
    
    
      <category term="學習日誌" scheme="https://chaichai.site/tags/%E5%AD%B8%E7%BF%92%E6%97%A5%E8%AA%8C/"/>
    
      <category term="Rails" scheme="https://chaichai.site/tags/Rails/"/>
    
      <category term="Web" scheme="https://chaichai.site/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Ruby Self</title>
    <link href="https://chaichai.site/2019/10/25/ruby_self/"/>
    <id>https://chaichai.site/2019/10/25/ruby_self/</id>
    <published>2019-10-24T16:00:00.000Z</published>
    <updated>2019-10-31T13:21:32.889Z</updated>
    
    <content type="html"><![CDATA[<p>學 Ruby 時，時常在不同的方法中看到某個神秘變數 self ，self 到底是誰呢？</p><a id="more"></a><hr><h1 id="何謂-Self"><a href="#何謂-Self" class="headerlink" title="何謂 Self ?"></a>何謂 Self ?</h1><p>Ruby 的官方 API 中這麼寫道：</p><blockquote><p>self 是「當前的物件」，以及當沒有明確指定接收者時，訊息（方法呼叫）的預設接收者。 self 所在的上下文決定 self 所代表的物件。</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">String</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">upcase_and_reverse</span></span></span><br><span class="line">    upcase.reverse</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>在這個方法中，upcase 這個訊息會被傳到 self，而 self 就是任何呼叫該方法的字串。</p><br><hr><br><h2 id="什麼是「目前的物件」？"><a href="#什麼是「目前的物件」？" class="headerlink" title="什麼是「目前的物件」？"></a>什麼是「目前的物件」？</h2><ul><li>單純地印出 self<br>self 指的是 main ，即是 object 的實體</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">p <span class="keyword">self</span></span><br><span class="line"><span class="comment"># main</span></span><br><span class="line">p <span class="keyword">self</span>.<span class="keyword">class</span></span><br><span class="line"><span class="comment"># Object</span></span><br></pre></td></tr></table></figure><br><ul><li>在一個 class / module 中<br>self 指的是該 class / module</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span></span></span><br><span class="line">  p <span class="keyword">self</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment"># Dog</span></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">Bird</span></span></span><br><span class="line">  p <span class="keyword">self</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment"># Bird</span></span><br></pre></td></tr></table></figure><br><ul><li>在實體方法中<br>self 指的是當前 class 的實體</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">instance_method</span></span></span><br><span class="line">    <span class="keyword">self</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">black = Dog.new</span><br><span class="line">black.instance_method</span><br><span class="line"><span class="comment"># &lt;Dog:0x00007f85540ede78&gt;</span></span><br><span class="line">black.instance_method == black</span><br><span class="line"><span class="comment"># true</span></span><br></pre></td></tr></table></figure><br><ul><li>在類別方法中<br>self 指的是當前的 class</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">class Dog</span><br><span class="line">  def self.class_method</span><br><span class="line">    self</span><br><span class="line">  end</span><br><span class="line">end</span><br><span class="line">Dog.class_method</span><br><span class="line"># Dog</span><br><span class="line">Dog.class_method == Dog</span><br><span class="line"># true</span><br></pre></td></tr></table></figure><br><ul><li>混合類型的實體方法<br>即使是在 module 中定義了 hello 方法，self 仍是它所混合的 class 的實體</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">module Greeting</span><br><span class="line">  def hello</span><br><span class="line">    self</span><br><span class="line">  end</span><br><span class="line">end</span><br><span class="line">class Dog</span><br><span class="line">  include Greeting</span><br><span class="line">end</span><br><span class="line">black = Dog.new</span><br><span class="line">black.hello</span><br><span class="line"># &lt;Dog:0x00007fdccc93b3d0&gt;</span><br><span class="line">black.hello == black</span><br><span class="line"># true</span><br></pre></td></tr></table></figure><br><ul><li>混合類型的類別方法<br>當 extend class 的方法時，self 的行為與普通的類別方法完全一樣</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">Greeting</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">hello</span></span></span><br><span class="line">    <span class="keyword">self</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span></span></span><br><span class="line">  extend Greeting</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">Dog.hello</span><br><span class="line"><span class="comment"># Dog</span></span><br><span class="line">Dog.hello == Dog</span><br><span class="line"><span class="comment"># true</span></span><br></pre></td></tr></table></figure><blockquote><p>在 Ruby 中， module 跟 class 都是物件，不論在 class 或 module，self 都是引用它所在的上下文的實體。</p></blockquote><br><hr><br><h2 id="什麼是「訊息的預設接收者」？"><a href="#什麼是「訊息的預設接收者」？" class="headerlink" title="什麼是「訊息的預設接收者」？"></a>什麼是「訊息的預設接收者」？</h2><ul><li>在一個類別方法中<br>self 指的是 Dog ，因此 self.sleep 等於 Dog.sleep</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">sleep</span></span></span><br><span class="line">    puts <span class="string">'zzz'</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">Dog</span>.<span class="title">sleep</span></span></span><br><span class="line">    puts <span class="string">'zzz'</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><br><ul><li>呼叫類別方法，當有明確的接收者時<br>可以用 self 去呼叫 sleep() 這個類別方法</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">sleep</span></span></span><br><span class="line">    puts <span class="string">'zzz'</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  Dog.sleep</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment"># zzz</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">sleep</span></span></span><br><span class="line">    puts <span class="string">'zzz'</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">self</span>.sleep</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment"># zzz</span></span><br></pre></td></tr></table></figure><br><ul><li>呼叫類別方法，當沒有明確的接收者時<br>在 class Dog 中， self 指的是 Dog，所以可以省略 self。<br>因為沒有傳訊息或接收者物件的小數點符號，當呼叫沒有接收者的方法時，訊息會傳給當前的值。由於當前的值是 Dog（預設接收者），可以直接呼叫類別方法 sleep。</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">sleep</span></span></span><br><span class="line">    puts <span class="string">'zzz'</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  sleep</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment"># zzz</span></span><br></pre></td></tr></table></figure><br><blockquote><p>在 Ruby 中，呼叫方法是以 obj.method 的方式，用一個小數點標記，左邊是接收者，右邊是方法。<br>但是，當接收者是 self 的時候，可以省略接收者和小數點。Ruby 將 self 當做預設的接收者，代表訊息會傳給 self。method == self.method。<br>必須注意的是，在呼叫寫入方法時（以等號結束的方法），即使是傳訊息給當前的 self ，也不能省略。<br>例如：呼叫方法 abc =，要寫成 self.abc = “hello”。如果寫成 abc = “hello” ，Ruby 會解讀爲對局部變數的賦值。</p></blockquote><br><hr><p>參考資料：<br><a href="https://ruby-doc.org/docs/keywords/1.9/Object.html#method-i-self" target="_blank" rel="noopener">https://ruby-doc.org/docs/keywords/1.9/Object.html#method-i-self</a><br><a href="https://rubyplus.com/articles/4861-Ruby-Basics-The-Default-Receiver" target="_blank" rel="noopener">https://rubyplus.com/articles/4861-Ruby-Basics-The-Default-Receiver</a><br><a href="https://www.honeybadger.io/blog/ruby-self-cheat-sheet/" target="_blank" rel="noopener">https://www.honeybadger.io/blog/ruby-self-cheat-sheet/</a><br><a href="https://www.iteye.com/blog/fantaxy025025-1108639" target="_blank" rel="noopener">https://www.iteye.com/blog/fantaxy025025-1108639</a><br><a href="http://www.52help.net/tw/ruby/63.mhtml" target="_blank" rel="noopener">http://www.52help.net/tw/ruby/63.mhtml</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;學 Ruby 時，時常在不同的方法中看到某個神秘變數 self ，self 到底是誰呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="學習日誌" scheme="https://chaichai.site/categories/%E5%AD%B8%E7%BF%92%E6%97%A5%E8%AA%8C/"/>
    
    
      <category term="學習日誌" scheme="https://chaichai.site/tags/%E5%AD%B8%E7%BF%92%E6%97%A5%E8%AA%8C/"/>
    
      <category term="Ruby" scheme="https://chaichai.site/tags/Ruby/"/>
    
      <category term="Rails" scheme="https://chaichai.site/tags/Rails/"/>
    
  </entry>
  
  <entry>
    <title>Duck Typing</title>
    <link href="https://chaichai.site/2019/10/24/ducktyping/"/>
    <id>https://chaichai.site/2019/10/24/ducktyping/</id>
    <published>2019-10-23T16:00:00.000Z</published>
    <updated>2019-10-31T13:21:09.560Z</updated>
    
    <content type="html"><![CDATA[<p>「當看到一隻鳥走起來像鴨子、游泳起來像鴨子、叫起來也像鴨子，那麼這隻鳥就可以被稱為鴨子。」</p><a id="more"></a><hr><p>簡單來說，假設有一隻鳥，他會游泳、會叫，而我們定義的鴨子需要會游泳、會叫，就可以說那隻鳥是鴨子，即使它可能是一隻企鵝。</p><p>我們並不在乎他是否繼承自鴨子的血緣，到底是不是鴨子，只在乎他的「行為」。</p><p>比如在 Ruby 等程式語言中，有中括號 [ ] 取值的方法，除了陣列以外，字串、Hash 等物件都可以使用，甚至是在自訂的 class 中寫入中括號的方法，不管它的型別是什麼，只要具備中括號的方法，就可以使用。</p><br><p>以下的範例體現了鴨子測試，只要有 quack, feathers 方法，對 <code>in_the_forest</code> 函式而言，該物件就是一個鴨子。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Duck</span></span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">quack</span></span></span><br><span class="line">        puts <span class="string">"這鴨子正在嘎嘎叫"</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">feathers</span></span></span><br><span class="line">        puts <span class="string">"這鴨子擁有白色和灰色的羽毛"</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">quack</span></span></span><br><span class="line">        puts <span class="string">"這人正在模仿鴨子"</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">feathers</span></span></span><br><span class="line">        puts <span class="string">"這人在地上拿起1根羽毛然後给其他人看"</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">in_the_forest</span><span class="params">(duck)</span></span></span><br><span class="line">    duck.quack</span><br><span class="line">    duck.feathers</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">game</span></span></span><br><span class="line">    duck = Duck.new</span><br><span class="line">    person = Person.new</span><br><span class="line">    in_the_forest(duck)</span><br><span class="line">    in_the_forest(person)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">game</span><br><span class="line"></span><br><span class="line"><span class="comment"># 這鴨子正在嘎嘎叫</span></span><br><span class="line"><span class="comment"># 這鴨子擁有白色和灰色的羽毛</span></span><br><span class="line"><span class="comment"># 這人正在模仿鴨子</span></span><br><span class="line"><span class="comment"># 這人在地上拿起1根羽毛然後给其他人看</span></span><br></pre></td></tr></table></figure><br><p>只是，由於鴨子型別所帶來的方便與靈活度，也可能早成難以檢測的錯誤，開發者需注意不同類別中相同方法的可能使用。<br><br></p><hr><p>參考資料<br><a href="https://zh.wikipedia.org/wiki/%E9%B8%AD%E5%AD%90%E7%B1%BB%E5%9E%8B" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E9%B8%AD%E5%AD%90%E7%B1%BB%E5%9E%8B</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;「當看到一隻鳥走起來像鴨子、游泳起來像鴨子、叫起來也像鴨子，那麼這隻鳥就可以被稱為鴨子。」&lt;/p&gt;
    
    </summary>
    
    
      <category term="學習日誌" scheme="https://chaichai.site/categories/%E5%AD%B8%E7%BF%92%E6%97%A5%E8%AA%8C/"/>
    
    
      <category term="學習日誌" scheme="https://chaichai.site/tags/%E5%AD%B8%E7%BF%92%E6%97%A5%E8%AA%8C/"/>
    
      <category term="Ruby" scheme="https://chaichai.site/tags/Ruby/"/>
    
      <category term="Rails" scheme="https://chaichai.site/tags/Rails/"/>
    
      <category term="OO" scheme="https://chaichai.site/tags/OO/"/>
    
  </entry>
  
  <entry>
    <title>Ruby Symbol</title>
    <link href="https://chaichai.site/2019/10/23/ruby_symbol/"/>
    <id>https://chaichai.site/2019/10/23/ruby_symbol/</id>
    <published>2019-10-22T16:00:00.000Z</published>
    <updated>2019-10-31T13:21:36.397Z</updated>
    
    <content type="html"><![CDATA[<p>在學 Ruby 時，常常會看到 :name 等，前面帶有冒號的字，那到底是什麼呢？</p><a id="more"></a><hr><h2 id="何謂-Symbol"><a href="#何謂-Symbol" class="headerlink" title="何謂 Symbol"></a>何謂 Symbol</h2><p>Ruby 的官方 API 中這麼寫道：</p><blockquote><p>Symbol 物件表示 Ruby 直譯器中的「名稱」及某些「字串」。<br>Symbol 可以用：name 和：“string” 語法以及各種 to_sym 方法生成。無論內容或含義為何，都會在程序執行的期間為該名稱或字串創建相同的 Symbol 物件。因此，假設 Fred 在一個 context 中是一個常數，在一個 context 中是方法，也是另一個 context 的類別， Symbol：Fred 全都是相同的物件。</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">One</span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Fred</span></span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  $f1 = <span class="symbol">:Fred</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">Two</span></span></span><br><span class="line">  Fred = <span class="number">1</span></span><br><span class="line">  $f2 = <span class="symbol">:Fred</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Fred</span><span class="params">()</span></span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">$f3 = <span class="symbol">:Fred</span></span><br><span class="line">$f1.object_id        <span class="comment"># 2514190</span></span><br><span class="line">$f2.object_id        <span class="comment"># 2514190</span></span><br><span class="line">$f3.object_id        <span class="comment"># 2514190</span></span><br></pre></td></tr></table></figure><ul><li>Symbol 就是一個 Symbol class 的實體。</li><li>Symbol 不是變數，是「帶有名字的物件」，本質上就是「值」，不需要也不能指向任何東西。（變數則是指向某物件的名字，無法單獨存在。）</li><li>Symbol 即使被重複使用，也都是同一個物件，object_id 不會變，不會消耗多餘的記憶體。</li></ul><br><h3 id="Symbol-的取得方式"><a href="#Symbol-的取得方式" class="headerlink" title="Symbol 的取得方式"></a>Symbol 的取得方式</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">:symbol</span></span><br><span class="line"><span class="symbol">:<span class="string">'symbol'</span></span></span><br><span class="line">%s!symbol!    <span class="comment"># %記法</span></span><br><span class="line"><span class="comment"># 可使用 Symbol.all_symbols 取得所有已生成的 Symbol 列表。</span></span><br></pre></td></tr></table></figure><ul><li>當宣告新的變數 / 方法 / 類別時，Ruby 會偷偷新增新的 Symbol</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">im_chai = <span class="string">"Chai"</span></span><br><span class="line">Symbol.all_symbols.map(&amp;<span class="symbol">:to_s</span>).<span class="keyword">include</span>?(<span class="string">"im_chai"</span>)   <span class="comment"># true</span></span><br></pre></td></tr></table></figure><br><h3 id="Symbol-的命名規則"><a href="#Symbol-的命名規則" class="headerlink" title="Symbol 的命名規則"></a>Symbol 的命名規則</h3><blockquote><p>Symbol 的表現方法為「：」後跟一個標識符，一個方法名稱（包括如「！」「？」「=」等等的後綴詞），一個變數名（包括如「$」的前綴詞等），英文或非英文皆可。唯一例外的是， Symbol 不接受「\」字元。</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">:LOCK_SH</span></span><br><span class="line"><span class="symbol">:</span>$&lt;</span><br><span class="line"><span class="symbol">:</span>こんにちは</span><br><span class="line"><span class="symbol">:</span>”Good Day”</span><br></pre></td></tr></table></figure><br><hr><br><h2 id="Symbol-與-String-的比較"><a href="#Symbol-與-String-的比較" class="headerlink" title="Symbol 與 String 的比較"></a>Symbol 與 String 的比較</h2><ul><li>相同 Symbol 指向的都是同一個記憶體，相同的 String 在每次產生時，都是在不同記憶體位置的不同物件。</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span>.times <span class="keyword">do</span></span><br><span class="line">  puts <span class="string">"hello"</span>.object_id</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 70199659402580</span></span><br><span class="line"><span class="comment"># 70199659366640</span></span><br><span class="line"><span class="comment"># 70199659366560</span></span><br><span class="line"><span class="number">5</span>.times <span class="keyword">do</span></span><br><span class="line">  puts <span class="symbol">:hello</span>.object_id</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment"># 899228</span></span><br><span class="line"><span class="comment"># 899228</span></span><br><span class="line"><span class="comment"># 899228</span></span><br></pre></td></tr></table></figure><br><ul><li>Symbol 效能較好 / String 較差<blockquote><p>做比較的時候，Symbol 是比對 object id 是否相同，而 String 則是一個字母一個字母逐一比對。所以在效能上來說，String 在做比較的時間複雜度會隨著字母的數量而增加，但 Symbol 的比較因為只比較是不是同一顆物件，所以它的複雜度是固定的。</p></blockquote></li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">p <span class="string">"abc"</span> == <span class="string">"abc"</span>           <span class="comment"># true</span></span><br><span class="line">p <span class="string">"abc"</span>.equal?(<span class="string">"abc"</span>)      <span class="comment"># false</span></span><br><span class="line">p <span class="symbol">:abc</span> == <span class="symbol">:abc</span>             <span class="comment"># true</span></span><br><span class="line">p <span class="symbol">:abc</span>.equal?(<span class="symbol">:abc</span>)        <span class="comment"># true</span></span><br></pre></td></tr></table></figure><br><ul><li>Symbol 可使用的方法較少 / String 較多（Symbol class 的某些方法與 String class 的方法具有相同的名稱和功能）</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">:hello</span>.length                  <span class="comment"># 5</span></span><br><span class="line"><span class="symbol">:hello</span>.upcase                  <span class="comment"># :HELLO</span></span><br><span class="line"><span class="symbol">:hello</span>[<span class="number">0</span>]                      <span class="comment"># "h"</span></span><br><span class="line"><span class="symbol">:<span class="string">"foobar--"</span></span>.capitalize         <span class="comment"># "Foobar--"</span></span><br><span class="line"><span class="symbol">:foo</span>.encoding                  <span class="comment"># #&lt;Encoding:US-ASCII&gt;</span></span><br><span class="line"><span class="symbol">:</span>哈哈.encoding                  <span class="comment"># #&lt;Encoding:UTF-8&gt;</span></span><br></pre></td></tr></table></figure><br><ul><li>Symbol 內容無法更動 / String 可以</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">p <span class="symbol">:symbol</span>           <span class="comment"># :symbol</span></span><br><span class="line">p <span class="string">"symbol"</span>          <span class="comment"># "symbol"</span></span><br><span class="line">p <span class="symbol">:symbol</span>[<span class="number">2</span>]        <span class="comment"># m</span></span><br><span class="line">p <span class="string">"symbol"</span>[<span class="number">2</span>]       <span class="comment"># m</span></span><br><span class="line"><span class="symbol">:symbol</span>[<span class="number">2</span>] = <span class="string">"k"</span>    <span class="comment"># error</span></span><br><span class="line"><span class="string">"symbol"</span>[<span class="number">2</span>] = <span class="string">"k"</span></span><br></pre></td></tr></table></figure><br><ul><li>如果把 String 給”冰凍”(freeze)起來，它便不可修改，object id 也會是同樣的。</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span>.times <span class="keyword">do</span></span><br><span class="line">  puts <span class="string">"hello"</span>.freeze.object_id</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment"># =&gt; 70314415546380</span></span><br><span class="line"><span class="comment"># =&gt; 70314415546380</span></span><br><span class="line"><span class="comment"># =&gt; 70314415546380</span></span><br></pre></td></tr></table></figure><br><h3 id="Symbol-與-String-的轉換"><a href="#Symbol-與-String-的轉換" class="headerlink" title="Symbol 與 String 的轉換"></a>Symbol 與 String 的轉換</h3><ul><li>String 轉 Symbol：</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p <span class="string">"foo"</span>.intern                   <span class="comment"># :foo</span></span><br><span class="line">p <span class="string">"foo"</span>.intern.to_s == <span class="string">"foo"</span>     <span class="comment"># true</span></span><br></pre></td></tr></table></figure><ul><li>Symbol 轉 String：</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p <span class="symbol">:foo</span>.id2name                   <span class="comment"># "foo"</span></span><br><span class="line">p <span class="symbol">:foo</span>.id2name.intern == <span class="symbol">:foo</span>    <span class="comment"># true</span></span><br></pre></td></tr></table></figure><br><hr><br><h2 id="Symbol-的使用時機"><a href="#Symbol-的使用時機" class="headerlink" title="Symbol 的使用時機"></a>Symbol 的使用時機</h2><blockquote><p>由於 Symbol 不可變更(immutable)，以及效能較好，當內容不會變動，又不需要使用 String 的那麼多方法時，即可使用 Symbol。</p></blockquote><p>例如：</p><ul><li>Hash 中的 Key</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">profile = &#123; <span class="symbol">name:</span> <span class="string">"Chai"</span>, <span class="symbol">age:</span> <span class="number">18</span> &#125;   <span class="comment"># &#123;:name=&gt;"Chai", :age=&gt;18&#125;</span></span><br></pre></td></tr></table></figure><br><ul><li>Rails 的方法裡</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span></span></span><br><span class="line">  @page = Page.find(params[<span class="symbol">:id</span>])</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create</span></span></span><br><span class="line">  @page = Page.create(page_params)</span><br><span class="line">    <span class="keyword">if</span> page.save</span><br><span class="line">      redirect_to pages_path</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      ender <span class="symbol">:new</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><br><ul><li>Proc</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">%w(A B C)</span>.map(&amp;<span class="symbol">:to_sym</span>)      <span class="comment"># [:A, :B, :C]</span></span><br></pre></td></tr></table></figure><br><blockquote><p>多數時候 String 與 Symbol 可以互換使用，但也有只能使用 Symbol 或 String 的狀況，使用前務必詳閱 API 手冊。</p></blockquote><br><hr><p>參考資料:<br><a href="https://ruby-doc.org/core-2.5.0/Symbol.html" target="_blank" rel="noopener">https://ruby-doc.org/core-2.5.0/Symbol.html</a><br><a href="https://docs.ruby-lang.org/ja/latest/class/Symbol.html" target="_blank" rel="noopener">https://docs.ruby-lang.org/ja/latest/class/Symbol.html</a><br><a href="https://kaochenlong.com/2016/04/25/string-and-symbol/" target="_blank" rel="noopener">https://kaochenlong.com/2016/04/25/string-and-symbol/</a><br><a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-rubysbl/index.html" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/opensource/os-cn-rubysbl/index.html</a><br><a href="https://pjchender.github.io/2017/09/26/ruby-symbol%EF%BC%88%E7%AC%A6%E8%99%9F%EF%BC%89/" target="_blank" rel="noopener">https://pjchender.github.io/2017/09/26/ruby-symbol%EF%BC%88%E7%AC%A6%E8%99%9F%EF%BC%89/</a><br><a href="https://ithelp.ithome.com.tw/articles/10161202" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10161202</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在學 Ruby 時，常常會看到 :name 等，前面帶有冒號的字，那到底是什麼呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="學習日誌" scheme="https://chaichai.site/categories/%E5%AD%B8%E7%BF%92%E6%97%A5%E8%AA%8C/"/>
    
    
      <category term="學習日誌" scheme="https://chaichai.site/tags/%E5%AD%B8%E7%BF%92%E6%97%A5%E8%AA%8C/"/>
    
      <category term="Ruby" scheme="https://chaichai.site/tags/Ruby/"/>
    
      <category term="Rails" scheme="https://chaichai.site/tags/Rails/"/>
    
  </entry>
  
  <entry>
    <title>Welcome to Chai&#39;s Blog!</title>
    <link href="https://chaichai.site/2019/10/01/welcome/"/>
    <id>https://chaichai.site/2019/10/01/welcome/</id>
    <published>2019-09-30T16:00:00.000Z</published>
    <updated>2019-11-02T17:19:54.754Z</updated>
    
    <content type="html"><![CDATA[<p>Hi 我是柴柴～</p><a id="more"></a><p>目前學習程式大約三個月，連 Junior 都還不敢自稱 XD<br>由於我是個不折不口的語言宅，不論中文、英文、日文，還是程式語言，只要是關於語言的話題都歡迎與我交流～<br>為了整理自己所學的概念，這裡放了我的學習日誌，希望可以對自己和找尋資料的人有一些幫助，如果有寫錯的地方還請不吝於指教。</p><p>除了 blog，也可以在 Medium 上找到我唷！<br><a href="https://medium.com/@wown0710" target="_blank" rel="noopener">Chai’s Medium</a></p><p>一起加油，成為厲害的宅宅吧！</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hi 我是柴柴～&lt;/p&gt;
    
    </summary>
    
    
      <category term="雜談" scheme="https://chaichai.site/categories/%E9%9B%9C%E8%AB%87/"/>
    
    
      <category term="雜談" scheme="https://chaichai.site/tags/%E9%9B%9C%E8%AB%87/"/>
    
  </entry>
  
</feed>
