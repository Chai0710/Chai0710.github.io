<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chai&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://chaichai.site/"/>
  <updated>2019-10-23T14:36:35.494Z</updated>
  <id>http://chaichai.site/</id>
  
  <author>
    <name>Chai Wei-Li</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ruby Symbol</title>
    <link href="http://chaichai.site/2019/10/23/ruby-symbol/"/>
    <id>http://chaichai.site/2019/10/23/ruby-symbol/</id>
    <published>2019-10-22T16:00:00.000Z</published>
    <updated>2019-10-23T14:36:35.494Z</updated>
    
    <content type="html"><![CDATA[<p>在學 Ruby 時，常常會看到 :name 等，前面帶有冒號的字，那到底是什麼呢？</p><a id="more"></a><hr><h2 id="何謂-Symbol"><a href="#何謂-Symbol" class="headerlink" title="何謂 Symbol"></a>何謂 Symbol</h2><p>Ruby 的官方 API 中這麼寫道：</p><blockquote><p>Symbol 物件表示 Ruby 直譯器中的「名稱」及某些「字串」。<br>Symbol 可以用：name 和：“string” 語法以及各種 to_sym 方法生成。無論內容或含義為何，都會在程序執行的期間為該名稱或字串創建相同的 Symbol 物件。因此，假設 Fred 在一個 context 中是一個常數，在一個 context 中是方法，也是另一個 context 的類別， Symbol：Fred 全都是相同的物件。</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">One</span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Fred</span></span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  $f1 = <span class="symbol">:Fred</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">Two</span></span></span><br><span class="line">  Fred = <span class="number">1</span></span><br><span class="line">  $f2 = <span class="symbol">:Fred</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Fred</span><span class="params">()</span></span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">$f3 = <span class="symbol">:Fred</span></span><br><span class="line">$f1.object_id        <span class="comment"># 2514190</span></span><br><span class="line">$f2.object_id        <span class="comment"># 2514190</span></span><br><span class="line">$f3.object_id        <span class="comment"># 2514190</span></span><br></pre></td></tr></table></figure><ul><li>Symbol 就是一個 Symbol class 的實體。</li><li>Symbol 不是變數，是「帶有名字的物件」，本質上就是「值」，不需要也不能指向任何東西。（變數則是指向某物件的名字，無法單獨存在。）</li><li>Symbol 即使被重複使用，也都是同一個物件，object_id 不會變，不會消耗多餘的記憶體。</li></ul><br><h3 id="Symbol-的取得方式"><a href="#Symbol-的取得方式" class="headerlink" title="Symbol 的取得方式"></a>Symbol 的取得方式</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">:symbol</span></span><br><span class="line"><span class="symbol">:<span class="string">'symbol'</span></span></span><br><span class="line">%s!symbol!    <span class="comment"># %記法</span></span><br><span class="line"><span class="comment"># 可使用 Symbol.all_symbols 取得所有已生成的 Symbol 列表。</span></span><br></pre></td></tr></table></figure><ul><li>當宣告新的變數 / 方法 / 類別時，Ruby 會偷偷新增新的 Symbol</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">im_chai = <span class="string">"Chai"</span></span><br><span class="line">Symbol.all_symbols.map(&amp;<span class="symbol">:to_s</span>).<span class="keyword">include</span>?(<span class="string">"im_chai"</span>)   <span class="comment"># true</span></span><br></pre></td></tr></table></figure><br><h3 id="Symbol-的命名規則"><a href="#Symbol-的命名規則" class="headerlink" title="Symbol 的命名規則"></a>Symbol 的命名規則</h3><blockquote><p>Symbol 的表現方法為「：」後跟一個標識符，一個方法名稱（包括如「！」「？」「=」等等的後綴詞），一個變數名（包括如「$」的前綴詞等），英文或非英文皆可。唯一例外的是， Symbol 不接受「\」字元。</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">:LOCK_SH</span></span><br><span class="line"><span class="symbol">:</span>$&lt;</span><br><span class="line"><span class="symbol">:</span>こんにちは</span><br><span class="line"><span class="symbol">:</span>”Good Day”</span><br></pre></td></tr></table></figure><br><hr><br><h2 id="Symbol-與-String-的比較"><a href="#Symbol-與-String-的比較" class="headerlink" title="Symbol 與 String 的比較"></a>Symbol 與 String 的比較</h2><ul><li>相同 Symbol 指向的都是同一個記憶體，相同的 String 在每次產生時，都是在不同記憶體位置的不同物件。</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span>.times <span class="keyword">do</span></span><br><span class="line">  puts <span class="string">"hello"</span>.object_id</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 70199659402580</span></span><br><span class="line"><span class="comment"># 70199659366640</span></span><br><span class="line"><span class="comment"># 70199659366560</span></span><br><span class="line"><span class="number">5</span>.times <span class="keyword">do</span></span><br><span class="line">  puts <span class="symbol">:hello</span>.object_id</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment"># 899228</span></span><br><span class="line"><span class="comment"># 899228</span></span><br><span class="line"><span class="comment"># 899228</span></span><br></pre></td></tr></table></figure><br><ul><li>Symbol 效能較好 / String 較差<blockquote><p>做比較的時候，Symbol 是比對 object id 是否相同，而 String 則是一個字母一個字母逐一比對。所以在效能上來說，String 在做比較的時間複雜度會隨著字母的數量而增加，但 Symbol 的比較因為只比較是不是同一顆物件，所以它的複雜度是固定的。</p></blockquote></li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">p <span class="string">"abc"</span> == <span class="string">"abc"</span>           <span class="comment"># true</span></span><br><span class="line">p <span class="string">"abc"</span>.equal?(<span class="string">"abc"</span>)      <span class="comment"># false</span></span><br><span class="line">p <span class="symbol">:abc</span> == <span class="symbol">:abc</span>             <span class="comment"># true</span></span><br><span class="line">p <span class="symbol">:abc</span>.equal?(<span class="symbol">:abc</span>)        <span class="comment"># true</span></span><br></pre></td></tr></table></figure><br><ul><li>Symbol 可使用的方法較少 / String 較多（Symbol class 的某些方法與 String class 的方法具有相同的名稱和功能）</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">:hello</span>.length                  <span class="comment"># 5</span></span><br><span class="line"><span class="symbol">:hello</span>.upcase                  <span class="comment"># :HELLO</span></span><br><span class="line"><span class="symbol">:hello</span>[<span class="number">0</span>]                      <span class="comment"># "h"</span></span><br><span class="line"><span class="symbol">:<span class="string">"foobar--"</span></span>.capitalize         <span class="comment"># "Foobar--"</span></span><br><span class="line"><span class="symbol">:foo</span>.encoding                  <span class="comment"># #&lt;Encoding:US-ASCII&gt;</span></span><br><span class="line"><span class="symbol">:</span>哈哈.encoding                  <span class="comment"># #&lt;Encoding:UTF-8&gt;</span></span><br></pre></td></tr></table></figure><br><ul><li>Symbol 內容無法更動 / String 可以</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">p <span class="symbol">:symbol</span>           <span class="comment"># :symbol</span></span><br><span class="line">p <span class="string">"symbol"</span>          <span class="comment"># "symbol"</span></span><br><span class="line">p <span class="symbol">:symbol</span>[<span class="number">2</span>]        <span class="comment"># m</span></span><br><span class="line">p <span class="string">"symbol"</span>[<span class="number">2</span>]       <span class="comment"># m</span></span><br><span class="line"><span class="symbol">:symbol</span>[<span class="number">2</span>] = <span class="string">"k"</span>    <span class="comment"># error</span></span><br><span class="line"><span class="string">"symbol"</span>[<span class="number">2</span>] = <span class="string">"k"</span></span><br></pre></td></tr></table></figure><br><ul><li>如果把 String 給”冰凍”(freeze)起來，它便不可修改，object id 也會是同樣的。</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span>.times <span class="keyword">do</span></span><br><span class="line">  puts <span class="string">"hello"</span>.freeze.object_id</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment"># =&gt; 70314415546380</span></span><br><span class="line"><span class="comment"># =&gt; 70314415546380</span></span><br><span class="line"><span class="comment"># =&gt; 70314415546380</span></span><br></pre></td></tr></table></figure><br><h3 id="Symbol-與-String-的轉換"><a href="#Symbol-與-String-的轉換" class="headerlink" title="Symbol 與 String 的轉換"></a>Symbol 與 String 的轉換</h3><ul><li>String 轉 Symbol：</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p <span class="string">"foo"</span>.intern                   <span class="comment"># :foo</span></span><br><span class="line">p <span class="string">"foo"</span>.intern.to_s == <span class="string">"foo"</span>     <span class="comment"># true</span></span><br></pre></td></tr></table></figure><ul><li>Symbol 轉 String：</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p <span class="symbol">:foo</span>.id2name                   <span class="comment"># "foo"</span></span><br><span class="line">p <span class="symbol">:foo</span>.id2name.intern == <span class="symbol">:foo</span>    <span class="comment"># true</span></span><br></pre></td></tr></table></figure><br><hr><br><h2 id="Symbol-的使用時機"><a href="#Symbol-的使用時機" class="headerlink" title="Symbol 的使用時機"></a>Symbol 的使用時機</h2><blockquote><p>由於 Symbol 不可變更(immutable)，以及效能較好，當內容不會變動，又不需要使用 String 的那麼多方法時，即可使用 Symbol。</p></blockquote><p>例如：</p><ul><li>Hash 中的 Key</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">profile = &#123; <span class="symbol">name:</span> <span class="string">"Chai"</span>, <span class="symbol">age:</span> <span class="number">18</span> &#125;   <span class="comment"># &#123;:name=&gt;"Chai", :age=&gt;18&#125;</span></span><br></pre></td></tr></table></figure><br><ul><li>Rails 的方法裡</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span></span></span><br><span class="line">  @page = Page.find(params[<span class="symbol">:id</span>])</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create</span></span></span><br><span class="line">  @page = Page.create(page_params)</span><br><span class="line">    <span class="keyword">if</span> page.save</span><br><span class="line">      redirect_to pages_path</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      ender <span class="symbol">:new</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><br><ul><li>Proc</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">%w(A B C)</span>.map(&amp;<span class="symbol">:to_sym</span>)      <span class="comment"># [:A, :B, :C]</span></span><br></pre></td></tr></table></figure><br><blockquote><p>多數時候 String 與 Symbol 可以互換使用，但也有只能使用 Symbol 或 String 的狀況，使用前務必詳閱 API 手冊。</p></blockquote><br><hr><br><p>參考資料:<br><a href="https://ruby-doc.org/core-2.5.0/Symbol.html" target="_blank" rel="noopener">https://ruby-doc.org/core-2.5.0/Symbol.html</a><br><a href="https://docs.ruby-lang.org/ja/latest/class/Symbol.html" target="_blank" rel="noopener">https://docs.ruby-lang.org/ja/latest/class/Symbol.html</a><br><a href="https://kaochenlong.com/2016/04/25/string-and-symbol/" target="_blank" rel="noopener">https://kaochenlong.com/2016/04/25/string-and-symbol/</a><br><a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-rubysbl/index.html" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/opensource/os-cn-rubysbl/index.html</a><br><a href="https://pjchender.github.io/2017/09/26/ruby-symbol%EF%BC%88%E7%AC%A6%E8%99%9F%EF%BC%89/" target="_blank" rel="noopener">https://pjchender.github.io/2017/09/26/ruby-symbol%EF%BC%88%E7%AC%A6%E8%99%9F%EF%BC%89/</a><br><a href="https://ithelp.ithome.com.tw/articles/10161202" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10161202</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在學 Ruby 時，常常會看到 :name 等，前面帶有冒號的字，那到底是什麼呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="學習日誌" scheme="http://chaichai.site/categories/%E5%AD%B8%E7%BF%92%E6%97%A5%E8%AA%8C/"/>
    
    
      <category term="Ruby學習日誌" scheme="http://chaichai.site/tags/Ruby%E5%AD%B8%E7%BF%92%E6%97%A5%E8%AA%8C/"/>
    
      <category term="Ruby" scheme="http://chaichai.site/tags/Ruby/"/>
    
      <category term="Rails" scheme="http://chaichai.site/tags/Rails/"/>
    
  </entry>
  
  <entry>
    <title>Welcome to Chai&#39;s blog.</title>
    <link href="http://chaichai.site/2019/10/01/hello-world/"/>
    <id>http://chaichai.site/2019/10/01/hello-world/</id>
    <published>2019-09-30T16:00:00.000Z</published>
    <updated>2019-10-23T13:51:16.489Z</updated>
    
    <content type="html"><![CDATA[<p>除了 blog，也可以在 Medium 上找到我唷！<br><a href="https://medium.com/@wown0710" target="_blank" rel="noopener">Chai’s Medium</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;除了 blog，也可以在 Medium 上找到我唷！&lt;br&gt;&lt;a href=&quot;https://medium.com/@wown0710&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Chai’s Medium&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="雜談" scheme="http://chaichai.site/categories/%E9%9B%9C%E8%AB%87/"/>
    
    
      <category term="Ruby" scheme="http://chaichai.site/tags/Ruby/"/>
    
      <category term="Rails" scheme="http://chaichai.site/tags/Rails/"/>
    
      <category term="雜談" scheme="http://chaichai.site/tags/%E9%9B%9C%E8%AB%87/"/>
    
  </entry>
  
</feed>
